// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: teleport/usageevents/v1/usageevents.proto

package v1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// DiscoverResource represents a resource type.
type DiscoverResource int32

const (
	DiscoverResource_DISCOVER_RESOURCE_UNSPECIFIED                   DiscoverResource = 0
	DiscoverResource_DISCOVER_RESOURCE_SERVER                        DiscoverResource = 1
	DiscoverResource_DISCOVER_RESOURCE_KUBERNETES                    DiscoverResource = 2
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_POSTGRES_SELF_HOSTED DiscoverResource = 3
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_MYSQL_SELF_HOSTED    DiscoverResource = 4
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_MONGODB_SELF_HOSTED  DiscoverResource = 5
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_POSTGRES_RDS         DiscoverResource = 6
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_MYSQL_RDS            DiscoverResource = 7
	DiscoverResource_DISCOVER_RESOURCE_APPLICATION_HTTP              DiscoverResource = 8
	DiscoverResource_DISCOVER_RESOURCE_APPLICATION_TCP               DiscoverResource = 9
	DiscoverResource_DISCOVER_RESOURCE_WINDOWS_DESKTOP               DiscoverResource = 10
)

var DiscoverResource_name = map[int32]string{
	0:  "DISCOVER_RESOURCE_UNSPECIFIED",
	1:  "DISCOVER_RESOURCE_SERVER",
	2:  "DISCOVER_RESOURCE_KUBERNETES",
	3:  "DISCOVER_RESOURCE_DATABASE_POSTGRES_SELF_HOSTED",
	4:  "DISCOVER_RESOURCE_DATABASE_MYSQL_SELF_HOSTED",
	5:  "DISCOVER_RESOURCE_DATABASE_MONGODB_SELF_HOSTED",
	6:  "DISCOVER_RESOURCE_DATABASE_POSTGRES_RDS",
	7:  "DISCOVER_RESOURCE_DATABASE_MYSQL_RDS",
	8:  "DISCOVER_RESOURCE_APPLICATION_HTTP",
	9:  "DISCOVER_RESOURCE_APPLICATION_TCP",
	10: "DISCOVER_RESOURCE_WINDOWS_DESKTOP",
}

var DiscoverResource_value = map[string]int32{
	"DISCOVER_RESOURCE_UNSPECIFIED":                   0,
	"DISCOVER_RESOURCE_SERVER":                        1,
	"DISCOVER_RESOURCE_KUBERNETES":                    2,
	"DISCOVER_RESOURCE_DATABASE_POSTGRES_SELF_HOSTED": 3,
	"DISCOVER_RESOURCE_DATABASE_MYSQL_SELF_HOSTED":    4,
	"DISCOVER_RESOURCE_DATABASE_MONGODB_SELF_HOSTED":  5,
	"DISCOVER_RESOURCE_DATABASE_POSTGRES_RDS":         6,
	"DISCOVER_RESOURCE_DATABASE_MYSQL_RDS":            7,
	"DISCOVER_RESOURCE_APPLICATION_HTTP":              8,
	"DISCOVER_RESOURCE_APPLICATION_TCP":               9,
	"DISCOVER_RESOURCE_WINDOWS_DESKTOP":               10,
}

func (x DiscoverResource) String() string {
	return proto.EnumName(DiscoverResource_name, int32(x))
}

func (DiscoverResource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{0}
}

// DiscoverStatus represents a Discover Step outcome.
type DiscoverStatus int32

const (
	DiscoverStatus_DISCOVER_STATUS_UNSPECIFIED DiscoverStatus = 0
	// The user tried to complete the action and it succeeded.
	DiscoverStatus_DISCOVER_STATUS_SUCCESS DiscoverStatus = 1
	// The system skipped the step.
	// For example:
	// When setting up a Database and there's already a Database Service proxying the DB.
	// In this case the Database Agent installation is skipped.
	DiscoverStatus_DISCOVER_STATUS_SKIPPED DiscoverStatus = 2
	// The user tried to complete the action and it failed.
	DiscoverStatus_DISCOVER_STATUS_ERROR DiscoverStatus = 3
	// The user did not complete the action and left the wizard.
	DiscoverStatus_DISCOVER_STATUS_ABORTED DiscoverStatus = 4
)

var DiscoverStatus_name = map[int32]string{
	0: "DISCOVER_STATUS_UNSPECIFIED",
	1: "DISCOVER_STATUS_SUCCESS",
	2: "DISCOVER_STATUS_SKIPPED",
	3: "DISCOVER_STATUS_ERROR",
	4: "DISCOVER_STATUS_ABORTED",
}

var DiscoverStatus_value = map[string]int32{
	"DISCOVER_STATUS_UNSPECIFIED": 0,
	"DISCOVER_STATUS_SUCCESS":     1,
	"DISCOVER_STATUS_SKIPPED":     2,
	"DISCOVER_STATUS_ERROR":       3,
	"DISCOVER_STATUS_ABORTED":     4,
}

func (x DiscoverStatus) String() string {
	return proto.EnumName(DiscoverStatus_name, int32(x))
}

func (DiscoverStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{1}
}

// UIBannerClickEvent is a usage event sent by the UI when the upgrade
// banner is clicked.
type UIBannerClickEvent struct {
	// The cluster alert name.
	Alert                string   `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIBannerClickEvent) Reset()         { *m = UIBannerClickEvent{} }
func (m *UIBannerClickEvent) String() string { return proto.CompactTextString(m) }
func (*UIBannerClickEvent) ProtoMessage()    {}
func (*UIBannerClickEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{0}
}
func (m *UIBannerClickEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIBannerClickEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIBannerClickEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIBannerClickEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIBannerClickEvent.Merge(m, src)
}
func (m *UIBannerClickEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIBannerClickEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIBannerClickEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIBannerClickEvent proto.InternalMessageInfo

func (m *UIBannerClickEvent) GetAlert() string {
	if m != nil {
		return m.Alert
	}
	return ""
}

// UIOnboardCompleteGoToDashboardClickEvent is a UI event sent when initial
// registration is complete.
type UIOnboardCompleteGoToDashboardClickEvent struct {
	// The event username. Not extracted from identity as this is pre-registration.
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIOnboardCompleteGoToDashboardClickEvent) Reset() {
	*m = UIOnboardCompleteGoToDashboardClickEvent{}
}
func (m *UIOnboardCompleteGoToDashboardClickEvent) String() string { return proto.CompactTextString(m) }
func (*UIOnboardCompleteGoToDashboardClickEvent) ProtoMessage()    {}
func (*UIOnboardCompleteGoToDashboardClickEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{1}
}
func (m *UIOnboardCompleteGoToDashboardClickEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIOnboardCompleteGoToDashboardClickEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIOnboardCompleteGoToDashboardClickEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIOnboardCompleteGoToDashboardClickEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIOnboardCompleteGoToDashboardClickEvent.Merge(m, src)
}
func (m *UIOnboardCompleteGoToDashboardClickEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIOnboardCompleteGoToDashboardClickEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIOnboardCompleteGoToDashboardClickEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIOnboardCompleteGoToDashboardClickEvent proto.InternalMessageInfo

func (m *UIOnboardCompleteGoToDashboardClickEvent) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// UIOnboardAddFirstResourceClickEvent is a UI event sent when a user clicks the
// "add first resource" button.
type UIOnboardAddFirstResourceClickEvent struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIOnboardAddFirstResourceClickEvent) Reset()         { *m = UIOnboardAddFirstResourceClickEvent{} }
func (m *UIOnboardAddFirstResourceClickEvent) String() string { return proto.CompactTextString(m) }
func (*UIOnboardAddFirstResourceClickEvent) ProtoMessage()    {}
func (*UIOnboardAddFirstResourceClickEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{2}
}
func (m *UIOnboardAddFirstResourceClickEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIOnboardAddFirstResourceClickEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIOnboardAddFirstResourceClickEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIOnboardAddFirstResourceClickEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIOnboardAddFirstResourceClickEvent.Merge(m, src)
}
func (m *UIOnboardAddFirstResourceClickEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIOnboardAddFirstResourceClickEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIOnboardAddFirstResourceClickEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIOnboardAddFirstResourceClickEvent proto.InternalMessageInfo

// UIOnboardAddFirstResourceLaterClickEvent is a UI event sent when a user
// clicks the "add first resource later" button.
type UIOnboardAddFirstResourceLaterClickEvent struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIOnboardAddFirstResourceLaterClickEvent) Reset() {
	*m = UIOnboardAddFirstResourceLaterClickEvent{}
}
func (m *UIOnboardAddFirstResourceLaterClickEvent) String() string { return proto.CompactTextString(m) }
func (*UIOnboardAddFirstResourceLaterClickEvent) ProtoMessage()    {}
func (*UIOnboardAddFirstResourceLaterClickEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{3}
}
func (m *UIOnboardAddFirstResourceLaterClickEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIOnboardAddFirstResourceLaterClickEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIOnboardAddFirstResourceLaterClickEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIOnboardAddFirstResourceLaterClickEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIOnboardAddFirstResourceLaterClickEvent.Merge(m, src)
}
func (m *UIOnboardAddFirstResourceLaterClickEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIOnboardAddFirstResourceLaterClickEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIOnboardAddFirstResourceLaterClickEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIOnboardAddFirstResourceLaterClickEvent proto.InternalMessageInfo

// UIOnboardSetCredentialSubmitEvent is a UI event sent during registration when
// users configure their credentials.
type UIOnboardSetCredentialSubmitEvent struct {
	// The event username. Not extracted from identity as this is pre-registration.
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIOnboardSetCredentialSubmitEvent) Reset()         { *m = UIOnboardSetCredentialSubmitEvent{} }
func (m *UIOnboardSetCredentialSubmitEvent) String() string { return proto.CompactTextString(m) }
func (*UIOnboardSetCredentialSubmitEvent) ProtoMessage()    {}
func (*UIOnboardSetCredentialSubmitEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{4}
}
func (m *UIOnboardSetCredentialSubmitEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIOnboardSetCredentialSubmitEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIOnboardSetCredentialSubmitEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIOnboardSetCredentialSubmitEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIOnboardSetCredentialSubmitEvent.Merge(m, src)
}
func (m *UIOnboardSetCredentialSubmitEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIOnboardSetCredentialSubmitEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIOnboardSetCredentialSubmitEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIOnboardSetCredentialSubmitEvent proto.InternalMessageInfo

func (m *UIOnboardSetCredentialSubmitEvent) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// UIOnboardRegisterChallengeSubmitEvent is a UI event sent during registration
// when the MFA challenge is completed.
type UIOnboardRegisterChallengeSubmitEvent struct {
	// The event username. Not extracted from identity as this is pre-registration.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The type of MFA used.
	MfaType string `protobuf:"bytes,2,opt,name=mfa_type,json=mfaType,proto3" json:"mfa_type,omitempty"`
	// The type of login used.
	LoginFlow            string   `protobuf:"bytes,3,opt,name=login_flow,json=loginFlow,proto3" json:"login_flow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIOnboardRegisterChallengeSubmitEvent) Reset()         { *m = UIOnboardRegisterChallengeSubmitEvent{} }
func (m *UIOnboardRegisterChallengeSubmitEvent) String() string { return proto.CompactTextString(m) }
func (*UIOnboardRegisterChallengeSubmitEvent) ProtoMessage()    {}
func (*UIOnboardRegisterChallengeSubmitEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{5}
}
func (m *UIOnboardRegisterChallengeSubmitEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIOnboardRegisterChallengeSubmitEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIOnboardRegisterChallengeSubmitEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIOnboardRegisterChallengeSubmitEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIOnboardRegisterChallengeSubmitEvent.Merge(m, src)
}
func (m *UIOnboardRegisterChallengeSubmitEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIOnboardRegisterChallengeSubmitEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIOnboardRegisterChallengeSubmitEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIOnboardRegisterChallengeSubmitEvent proto.InternalMessageInfo

func (m *UIOnboardRegisterChallengeSubmitEvent) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UIOnboardRegisterChallengeSubmitEvent) GetMfaType() string {
	if m != nil {
		return m.MfaType
	}
	return ""
}

func (m *UIOnboardRegisterChallengeSubmitEvent) GetLoginFlow() string {
	if m != nil {
		return m.LoginFlow
	}
	return ""
}

// UIRecoveryCodesContinueClickEvent is a UI event sent during
// registration when the user configures cluster recovery codes.
type UIRecoveryCodesContinueClickEvent struct {
	// The event username. Not extracted from identity as this is pre-registration.
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIRecoveryCodesContinueClickEvent) Reset()         { *m = UIRecoveryCodesContinueClickEvent{} }
func (m *UIRecoveryCodesContinueClickEvent) String() string { return proto.CompactTextString(m) }
func (*UIRecoveryCodesContinueClickEvent) ProtoMessage()    {}
func (*UIRecoveryCodesContinueClickEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{6}
}
func (m *UIRecoveryCodesContinueClickEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIRecoveryCodesContinueClickEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIRecoveryCodesContinueClickEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIRecoveryCodesContinueClickEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIRecoveryCodesContinueClickEvent.Merge(m, src)
}
func (m *UIRecoveryCodesContinueClickEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIRecoveryCodesContinueClickEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIRecoveryCodesContinueClickEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIRecoveryCodesContinueClickEvent proto.InternalMessageInfo

func (m *UIRecoveryCodesContinueClickEvent) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// UIRecoveryCodesCopyClickEvent is a UI event sent during
// registration when the user copies recovery codes.
type UIRecoveryCodesCopyClickEvent struct {
	// The event username. Not extracted from identity as this is pre-registration.
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIRecoveryCodesCopyClickEvent) Reset()         { *m = UIRecoveryCodesCopyClickEvent{} }
func (m *UIRecoveryCodesCopyClickEvent) String() string { return proto.CompactTextString(m) }
func (*UIRecoveryCodesCopyClickEvent) ProtoMessage()    {}
func (*UIRecoveryCodesCopyClickEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{7}
}
func (m *UIRecoveryCodesCopyClickEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIRecoveryCodesCopyClickEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIRecoveryCodesCopyClickEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIRecoveryCodesCopyClickEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIRecoveryCodesCopyClickEvent.Merge(m, src)
}
func (m *UIRecoveryCodesCopyClickEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIRecoveryCodesCopyClickEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIRecoveryCodesCopyClickEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIRecoveryCodesCopyClickEvent proto.InternalMessageInfo

func (m *UIRecoveryCodesCopyClickEvent) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// UIRecoveryCodesPrintClickEvent is a UI event sent during
// registration when the user prints recovery codes.
type UIRecoveryCodesPrintClickEvent struct {
	// The event username. Not extracted from identity as this is pre-registration.
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UIRecoveryCodesPrintClickEvent) Reset()         { *m = UIRecoveryCodesPrintClickEvent{} }
func (m *UIRecoveryCodesPrintClickEvent) String() string { return proto.CompactTextString(m) }
func (*UIRecoveryCodesPrintClickEvent) ProtoMessage()    {}
func (*UIRecoveryCodesPrintClickEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{8}
}
func (m *UIRecoveryCodesPrintClickEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIRecoveryCodesPrintClickEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIRecoveryCodesPrintClickEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIRecoveryCodesPrintClickEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIRecoveryCodesPrintClickEvent.Merge(m, src)
}
func (m *UIRecoveryCodesPrintClickEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIRecoveryCodesPrintClickEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIRecoveryCodesPrintClickEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIRecoveryCodesPrintClickEvent proto.InternalMessageInfo

func (m *UIRecoveryCodesPrintClickEvent) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// DiscoverMetadata contains common metadata for Discover related events.
type DiscoverMetadata struct {
	// Uniquely identifies Discover wizard "session". Will allow to correlate
	// events within the same Discover wizard run. Can be UUIDv4.
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverMetadata) Reset()         { *m = DiscoverMetadata{} }
func (m *DiscoverMetadata) String() string { return proto.CompactTextString(m) }
func (*DiscoverMetadata) ProtoMessage()    {}
func (*DiscoverMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{9}
}
func (m *DiscoverMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DiscoverMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DiscoverMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DiscoverMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverMetadata.Merge(m, src)
}
func (m *DiscoverMetadata) XXX_Size() int {
	return m.Size()
}
func (m *DiscoverMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverMetadata proto.InternalMessageInfo

func (m *DiscoverMetadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// DiscoverResourceMetadata contains common metadata identifying resource type being added.
type DiscoverResourceMetadata struct {
	// Resource type that is being added.
	Resource             DiscoverResource `protobuf:"varint,1,opt,name=resource,proto3,enum=teleport.usageevents.v1.DiscoverResource" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DiscoverResourceMetadata) Reset()         { *m = DiscoverResourceMetadata{} }
func (m *DiscoverResourceMetadata) String() string { return proto.CompactTextString(m) }
func (*DiscoverResourceMetadata) ProtoMessage()    {}
func (*DiscoverResourceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{10}
}
func (m *DiscoverResourceMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DiscoverResourceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DiscoverResourceMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DiscoverResourceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverResourceMetadata.Merge(m, src)
}
func (m *DiscoverResourceMetadata) XXX_Size() int {
	return m.Size()
}
func (m *DiscoverResourceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverResourceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverResourceMetadata proto.InternalMessageInfo

func (m *DiscoverResourceMetadata) GetResource() DiscoverResource {
	if m != nil {
		return m.Resource
	}
	return DiscoverResource_DISCOVER_RESOURCE_UNSPECIFIED
}

// DiscoverStepStatus contains fields that track a particular step outcome,
// for example connection test failed or succeeded, or user aborted the step.
type DiscoverStepStatus struct {
	// Indicates the step outcome.
	Status DiscoverStatus `protobuf:"varint,1,opt,name=status,proto3,enum=teleport.usageevents.v1.DiscoverStatus" json:"status,omitempty"`
	// Contains error details in case of Error Status.
	// We have to be careful to not include any identifyable infomation like server addresses here.
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverStepStatus) Reset()         { *m = DiscoverStepStatus{} }
func (m *DiscoverStepStatus) String() string { return proto.CompactTextString(m) }
func (*DiscoverStepStatus) ProtoMessage()    {}
func (*DiscoverStepStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{11}
}
func (m *DiscoverStepStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DiscoverStepStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DiscoverStepStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DiscoverStepStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverStepStatus.Merge(m, src)
}
func (m *DiscoverStepStatus) XXX_Size() int {
	return m.Size()
}
func (m *DiscoverStepStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverStepStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverStepStatus proto.InternalMessageInfo

func (m *DiscoverStepStatus) GetStatus() DiscoverStatus {
	if m != nil {
		return m.Status
	}
	return DiscoverStatus_DISCOVER_STATUS_UNSPECIFIED
}

func (m *DiscoverStepStatus) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// UIDiscoverStartedEvent is emitted when the wizard opens.
type UIDiscoverStartedEvent struct {
	Metadata             *DiscoverMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status               *DiscoverStepStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UIDiscoverStartedEvent) Reset()         { *m = UIDiscoverStartedEvent{} }
func (m *UIDiscoverStartedEvent) String() string { return proto.CompactTextString(m) }
func (*UIDiscoverStartedEvent) ProtoMessage()    {}
func (*UIDiscoverStartedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{12}
}
func (m *UIDiscoverStartedEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIDiscoverStartedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIDiscoverStartedEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIDiscoverStartedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIDiscoverStartedEvent.Merge(m, src)
}
func (m *UIDiscoverStartedEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIDiscoverStartedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIDiscoverStartedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIDiscoverStartedEvent proto.InternalMessageInfo

func (m *UIDiscoverStartedEvent) GetMetadata() *DiscoverMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *UIDiscoverStartedEvent) GetStatus() *DiscoverStepStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// UIDiscoverResourceSelectionEvent is emitted when user selected resource type to add
// and proceeded to the next step.
type UIDiscoverResourceSelectionEvent struct {
	Metadata             *DiscoverMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Resource             *DiscoverResourceMetadata `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Status               *DiscoverStepStatus       `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UIDiscoverResourceSelectionEvent) Reset()         { *m = UIDiscoverResourceSelectionEvent{} }
func (m *UIDiscoverResourceSelectionEvent) String() string { return proto.CompactTextString(m) }
func (*UIDiscoverResourceSelectionEvent) ProtoMessage()    {}
func (*UIDiscoverResourceSelectionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{13}
}
func (m *UIDiscoverResourceSelectionEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UIDiscoverResourceSelectionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UIDiscoverResourceSelectionEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UIDiscoverResourceSelectionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UIDiscoverResourceSelectionEvent.Merge(m, src)
}
func (m *UIDiscoverResourceSelectionEvent) XXX_Size() int {
	return m.Size()
}
func (m *UIDiscoverResourceSelectionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UIDiscoverResourceSelectionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UIDiscoverResourceSelectionEvent proto.InternalMessageInfo

func (m *UIDiscoverResourceSelectionEvent) GetMetadata() *DiscoverMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *UIDiscoverResourceSelectionEvent) GetResource() *DiscoverResourceMetadata {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *UIDiscoverResourceSelectionEvent) GetStatus() *DiscoverStepStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// UsageEventOneOf is a message that can accept a oneof of any supported
// external usage event.
type UsageEventOneOf struct {
	// Types that are valid to be assigned to Event:
	//
	//	*UsageEventOneOf_UiBannerClick
	//	*UsageEventOneOf_UiOnboardCompleteGoToDashboardClick
	//	*UsageEventOneOf_UiOnboardAddFirstResourceClick
	//	*UsageEventOneOf_UiOnboardAddFirstResourceLaterClick
	//	*UsageEventOneOf_UiOnboardSetCredentialSubmit
	//	*UsageEventOneOf_UiOnboardRegisterChallengeSubmit
	//	*UsageEventOneOf_UiRecoveryCodesContinueClick
	//	*UsageEventOneOf_UiRecoveryCodesCopyClick
	//	*UsageEventOneOf_UiRecoveryCodesPrintClick
	//	*UsageEventOneOf_UiDiscoverStartedEvent
	//	*UsageEventOneOf_UiDiscoverResourceSelectionEvent
	Event                isUsageEventOneOf_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *UsageEventOneOf) Reset()         { *m = UsageEventOneOf{} }
func (m *UsageEventOneOf) String() string { return proto.CompactTextString(m) }
func (*UsageEventOneOf) ProtoMessage()    {}
func (*UsageEventOneOf) Descriptor() ([]byte, []int) {
	return fileDescriptor_94cf2ca1c69fd564, []int{14}
}
func (m *UsageEventOneOf) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UsageEventOneOf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UsageEventOneOf.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UsageEventOneOf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageEventOneOf.Merge(m, src)
}
func (m *UsageEventOneOf) XXX_Size() int {
	return m.Size()
}
func (m *UsageEventOneOf) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageEventOneOf.DiscardUnknown(m)
}

var xxx_messageInfo_UsageEventOneOf proto.InternalMessageInfo

type isUsageEventOneOf_Event interface {
	isUsageEventOneOf_Event()
	MarshalTo([]byte) (int, error)
	Size() int
}

type UsageEventOneOf_UiBannerClick struct {
	UiBannerClick *UIBannerClickEvent `protobuf:"bytes,1,opt,name=ui_banner_click,json=uiBannerClick,proto3,oneof" json:"ui_banner_click,omitempty"`
}
type UsageEventOneOf_UiOnboardCompleteGoToDashboardClick struct {
	UiOnboardCompleteGoToDashboardClick *UIOnboardCompleteGoToDashboardClickEvent `protobuf:"bytes,3,opt,name=ui_onboard_complete_go_to_dashboard_click,json=uiOnboardCompleteGoToDashboardClick,proto3,oneof" json:"ui_onboard_complete_go_to_dashboard_click,omitempty"`
}
type UsageEventOneOf_UiOnboardAddFirstResourceClick struct {
	UiOnboardAddFirstResourceClick *UIOnboardAddFirstResourceClickEvent `protobuf:"bytes,4,opt,name=ui_onboard_add_first_resource_click,json=uiOnboardAddFirstResourceClick,proto3,oneof" json:"ui_onboard_add_first_resource_click,omitempty"`
}
type UsageEventOneOf_UiOnboardAddFirstResourceLaterClick struct {
	UiOnboardAddFirstResourceLaterClick *UIOnboardAddFirstResourceLaterClickEvent `protobuf:"bytes,5,opt,name=ui_onboard_add_first_resource_later_click,json=uiOnboardAddFirstResourceLaterClick,proto3,oneof" json:"ui_onboard_add_first_resource_later_click,omitempty"`
}
type UsageEventOneOf_UiOnboardSetCredentialSubmit struct {
	UiOnboardSetCredentialSubmit *UIOnboardSetCredentialSubmitEvent `protobuf:"bytes,6,opt,name=ui_onboard_set_credential_submit,json=uiOnboardSetCredentialSubmit,proto3,oneof" json:"ui_onboard_set_credential_submit,omitempty"`
}
type UsageEventOneOf_UiOnboardRegisterChallengeSubmit struct {
	UiOnboardRegisterChallengeSubmit *UIOnboardRegisterChallengeSubmitEvent `protobuf:"bytes,7,opt,name=ui_onboard_register_challenge_submit,json=uiOnboardRegisterChallengeSubmit,proto3,oneof" json:"ui_onboard_register_challenge_submit,omitempty"`
}
type UsageEventOneOf_UiRecoveryCodesContinueClick struct {
	UiRecoveryCodesContinueClick *UIRecoveryCodesContinueClickEvent `protobuf:"bytes,8,opt,name=ui_recovery_codes_continue_click,json=uiRecoveryCodesContinueClick,proto3,oneof" json:"ui_recovery_codes_continue_click,omitempty"`
}
type UsageEventOneOf_UiRecoveryCodesCopyClick struct {
	UiRecoveryCodesCopyClick *UIRecoveryCodesCopyClickEvent `protobuf:"bytes,9,opt,name=ui_recovery_codes_copy_click,json=uiRecoveryCodesCopyClick,proto3,oneof" json:"ui_recovery_codes_copy_click,omitempty"`
}
type UsageEventOneOf_UiRecoveryCodesPrintClick struct {
	UiRecoveryCodesPrintClick *UIRecoveryCodesPrintClickEvent `protobuf:"bytes,10,opt,name=ui_recovery_codes_print_click,json=uiRecoveryCodesPrintClick,proto3,oneof" json:"ui_recovery_codes_print_click,omitempty"`
}
type UsageEventOneOf_UiDiscoverStartedEvent struct {
	UiDiscoverStartedEvent *UIDiscoverStartedEvent `protobuf:"bytes,11,opt,name=ui_discover_started_event,json=uiDiscoverStartedEvent,proto3,oneof" json:"ui_discover_started_event,omitempty"`
}
type UsageEventOneOf_UiDiscoverResourceSelectionEvent struct {
	UiDiscoverResourceSelectionEvent *UIDiscoverResourceSelectionEvent `protobuf:"bytes,12,opt,name=ui_discover_resource_selection_event,json=uiDiscoverResourceSelectionEvent,proto3,oneof" json:"ui_discover_resource_selection_event,omitempty"`
}

func (*UsageEventOneOf_UiBannerClick) isUsageEventOneOf_Event()                       {}
func (*UsageEventOneOf_UiOnboardCompleteGoToDashboardClick) isUsageEventOneOf_Event() {}
func (*UsageEventOneOf_UiOnboardAddFirstResourceClick) isUsageEventOneOf_Event()      {}
func (*UsageEventOneOf_UiOnboardAddFirstResourceLaterClick) isUsageEventOneOf_Event() {}
func (*UsageEventOneOf_UiOnboardSetCredentialSubmit) isUsageEventOneOf_Event()        {}
func (*UsageEventOneOf_UiOnboardRegisterChallengeSubmit) isUsageEventOneOf_Event()    {}
func (*UsageEventOneOf_UiRecoveryCodesContinueClick) isUsageEventOneOf_Event()        {}
func (*UsageEventOneOf_UiRecoveryCodesCopyClick) isUsageEventOneOf_Event()            {}
func (*UsageEventOneOf_UiRecoveryCodesPrintClick) isUsageEventOneOf_Event()           {}
func (*UsageEventOneOf_UiDiscoverStartedEvent) isUsageEventOneOf_Event()              {}
func (*UsageEventOneOf_UiDiscoverResourceSelectionEvent) isUsageEventOneOf_Event()    {}

func (m *UsageEventOneOf) GetEvent() isUsageEventOneOf_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *UsageEventOneOf) GetUiBannerClick() *UIBannerClickEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiBannerClick); ok {
		return x.UiBannerClick
	}
	return nil
}

func (m *UsageEventOneOf) GetUiOnboardCompleteGoToDashboardClick() *UIOnboardCompleteGoToDashboardClickEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiOnboardCompleteGoToDashboardClick); ok {
		return x.UiOnboardCompleteGoToDashboardClick
	}
	return nil
}

func (m *UsageEventOneOf) GetUiOnboardAddFirstResourceClick() *UIOnboardAddFirstResourceClickEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiOnboardAddFirstResourceClick); ok {
		return x.UiOnboardAddFirstResourceClick
	}
	return nil
}

func (m *UsageEventOneOf) GetUiOnboardAddFirstResourceLaterClick() *UIOnboardAddFirstResourceLaterClickEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiOnboardAddFirstResourceLaterClick); ok {
		return x.UiOnboardAddFirstResourceLaterClick
	}
	return nil
}

func (m *UsageEventOneOf) GetUiOnboardSetCredentialSubmit() *UIOnboardSetCredentialSubmitEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiOnboardSetCredentialSubmit); ok {
		return x.UiOnboardSetCredentialSubmit
	}
	return nil
}

func (m *UsageEventOneOf) GetUiOnboardRegisterChallengeSubmit() *UIOnboardRegisterChallengeSubmitEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiOnboardRegisterChallengeSubmit); ok {
		return x.UiOnboardRegisterChallengeSubmit
	}
	return nil
}

func (m *UsageEventOneOf) GetUiRecoveryCodesContinueClick() *UIRecoveryCodesContinueClickEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiRecoveryCodesContinueClick); ok {
		return x.UiRecoveryCodesContinueClick
	}
	return nil
}

func (m *UsageEventOneOf) GetUiRecoveryCodesCopyClick() *UIRecoveryCodesCopyClickEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiRecoveryCodesCopyClick); ok {
		return x.UiRecoveryCodesCopyClick
	}
	return nil
}

func (m *UsageEventOneOf) GetUiRecoveryCodesPrintClick() *UIRecoveryCodesPrintClickEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiRecoveryCodesPrintClick); ok {
		return x.UiRecoveryCodesPrintClick
	}
	return nil
}

func (m *UsageEventOneOf) GetUiDiscoverStartedEvent() *UIDiscoverStartedEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiDiscoverStartedEvent); ok {
		return x.UiDiscoverStartedEvent
	}
	return nil
}

func (m *UsageEventOneOf) GetUiDiscoverResourceSelectionEvent() *UIDiscoverResourceSelectionEvent {
	if x, ok := m.GetEvent().(*UsageEventOneOf_UiDiscoverResourceSelectionEvent); ok {
		return x.UiDiscoverResourceSelectionEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UsageEventOneOf) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UsageEventOneOf_UiBannerClick)(nil),
		(*UsageEventOneOf_UiOnboardCompleteGoToDashboardClick)(nil),
		(*UsageEventOneOf_UiOnboardAddFirstResourceClick)(nil),
		(*UsageEventOneOf_UiOnboardAddFirstResourceLaterClick)(nil),
		(*UsageEventOneOf_UiOnboardSetCredentialSubmit)(nil),
		(*UsageEventOneOf_UiOnboardRegisterChallengeSubmit)(nil),
		(*UsageEventOneOf_UiRecoveryCodesContinueClick)(nil),
		(*UsageEventOneOf_UiRecoveryCodesCopyClick)(nil),
		(*UsageEventOneOf_UiRecoveryCodesPrintClick)(nil),
		(*UsageEventOneOf_UiDiscoverStartedEvent)(nil),
		(*UsageEventOneOf_UiDiscoverResourceSelectionEvent)(nil),
	}
}

func init() {
	proto.RegisterEnum("teleport.usageevents.v1.DiscoverResource", DiscoverResource_name, DiscoverResource_value)
	proto.RegisterEnum("teleport.usageevents.v1.DiscoverStatus", DiscoverStatus_name, DiscoverStatus_value)
	proto.RegisterType((*UIBannerClickEvent)(nil), "teleport.usageevents.v1.UIBannerClickEvent")
	proto.RegisterType((*UIOnboardCompleteGoToDashboardClickEvent)(nil), "teleport.usageevents.v1.UIOnboardCompleteGoToDashboardClickEvent")
	proto.RegisterType((*UIOnboardAddFirstResourceClickEvent)(nil), "teleport.usageevents.v1.UIOnboardAddFirstResourceClickEvent")
	proto.RegisterType((*UIOnboardAddFirstResourceLaterClickEvent)(nil), "teleport.usageevents.v1.UIOnboardAddFirstResourceLaterClickEvent")
	proto.RegisterType((*UIOnboardSetCredentialSubmitEvent)(nil), "teleport.usageevents.v1.UIOnboardSetCredentialSubmitEvent")
	proto.RegisterType((*UIOnboardRegisterChallengeSubmitEvent)(nil), "teleport.usageevents.v1.UIOnboardRegisterChallengeSubmitEvent")
	proto.RegisterType((*UIRecoveryCodesContinueClickEvent)(nil), "teleport.usageevents.v1.UIRecoveryCodesContinueClickEvent")
	proto.RegisterType((*UIRecoveryCodesCopyClickEvent)(nil), "teleport.usageevents.v1.UIRecoveryCodesCopyClickEvent")
	proto.RegisterType((*UIRecoveryCodesPrintClickEvent)(nil), "teleport.usageevents.v1.UIRecoveryCodesPrintClickEvent")
	proto.RegisterType((*DiscoverMetadata)(nil), "teleport.usageevents.v1.DiscoverMetadata")
	proto.RegisterType((*DiscoverResourceMetadata)(nil), "teleport.usageevents.v1.DiscoverResourceMetadata")
	proto.RegisterType((*DiscoverStepStatus)(nil), "teleport.usageevents.v1.DiscoverStepStatus")
	proto.RegisterType((*UIDiscoverStartedEvent)(nil), "teleport.usageevents.v1.UIDiscoverStartedEvent")
	proto.RegisterType((*UIDiscoverResourceSelectionEvent)(nil), "teleport.usageevents.v1.UIDiscoverResourceSelectionEvent")
	proto.RegisterType((*UsageEventOneOf)(nil), "teleport.usageevents.v1.UsageEventOneOf")
}

func init() {
	proto.RegisterFile("teleport/usageevents/v1/usageevents.proto", fileDescriptor_94cf2ca1c69fd564)
}

var fileDescriptor_94cf2ca1c69fd564 = []byte{
	// 1172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x5d, 0x8f, 0xdb, 0x44,
	0x14, 0x8d, 0x93, 0xee, 0x6e, 0xf6, 0x16, 0x5a, 0x6b, 0x04, 0x6d, 0x96, 0xee, 0x2e, 0xdb, 0xb4,
	0xa5, 0xed, 0x16, 0x25, 0xb4, 0x95, 0x40, 0x40, 0x45, 0x95, 0x38, 0xde, 0x26, 0xec, 0x87, 0xc3,
	0x8c, 0xd3, 0x0a, 0x5e, 0x46, 0xde, 0x78, 0x36, 0x6b, 0xd5, 0xb1, 0x23, 0x7b, 0xbc, 0x65, 0x85,
	0x78, 0xe3, 0xad, 0x2f, 0xbc, 0xf3, 0x08, 0x3f, 0x86, 0x47, 0xfe, 0x00, 0x12, 0xda, 0xbf, 0xc0,
	0x33, 0x12, 0xf2, 0xf8, 0x23, 0xde, 0x7c, 0x5a, 0x88, 0xb7, 0x78, 0xee, 0xb9, 0xf7, 0x9c, 0xb9,
	0x33, 0xbe, 0x27, 0x86, 0x87, 0x9c, 0xd9, 0x6c, 0xe4, 0x7a, 0xbc, 0x1e, 0xf8, 0xc6, 0x80, 0xb1,
	0x33, 0xe6, 0x70, 0xbf, 0x7e, 0xf6, 0x38, 0xfb, 0x58, 0x1b, 0x79, 0x2e, 0x77, 0xd1, 0xcd, 0x04,
	0x5a, 0xcb, 0xc6, 0xce, 0x1e, 0x57, 0x77, 0x01, 0xf5, 0x3a, 0x4d, 0xc3, 0x71, 0x98, 0xa7, 0xd8,
	0x56, 0xff, 0xb5, 0x1a, 0x46, 0xd0, 0x7b, 0xb0, 0x62, 0xd8, 0xcc, 0xe3, 0x15, 0x69, 0x47, 0x7a,
	0xb0, 0x8e, 0xa3, 0x87, 0xea, 0x1e, 0x3c, 0xe8, 0x75, 0x34, 0xe7, 0xd8, 0x35, 0x3c, 0x53, 0x71,
	0x87, 0x23, 0x9b, 0x71, 0xf6, 0xc2, 0xd5, 0xdd, 0x96, 0xe1, 0x9f, 0x46, 0x8b, 0xe3, 0x0a, 0x1f,
	0x40, 0x39, 0xf0, 0x99, 0xe7, 0x18, 0x43, 0x16, 0x17, 0x49, 0x9f, 0xab, 0xf7, 0xe0, 0x4e, 0x5a,
	0xa7, 0x61, 0x9a, 0x7b, 0x96, 0xe7, 0x73, 0xcc, 0x7c, 0x37, 0xf0, 0xfa, 0x6c, 0x5c, 0xa2, 0xba,
	0x9b, 0xa1, 0x9b, 0x84, 0x1d, 0x18, 0x3c, 0x2b, 0xb8, 0xfa, 0x1c, 0x6e, 0xa7, 0x58, 0xc2, 0xb8,
	0xe2, 0x31, 0x93, 0x39, 0xdc, 0x32, 0x6c, 0x12, 0x1c, 0x0f, 0x2d, 0xbe, 0x5c, 0xd3, 0x8f, 0x70,
	0x2f, 0x2d, 0x80, 0xd9, 0xc0, 0xf2, 0xc3, 0xfa, 0xa7, 0x86, 0x6d, 0x33, 0x67, 0xc0, 0x72, 0x16,
	0x41, 0x1b, 0x50, 0x1e, 0x9e, 0x18, 0x94, 0x9f, 0x8f, 0x58, 0xa5, 0x28, 0x62, 0x6b, 0xc3, 0x13,
	0x43, 0x3f, 0x1f, 0x31, 0xb4, 0x05, 0x60, 0xbb, 0x03, 0xcb, 0xa1, 0x27, 0xb6, 0xfb, 0xa6, 0x52,
	0x12, 0xc1, 0x75, 0xb1, 0xb2, 0x67, 0xbb, 0x6f, 0x22, 0xfd, 0x98, 0xf5, 0xdd, 0x33, 0xe6, 0x9d,
	0x2b, 0xae, 0xc9, 0x7c, 0xc5, 0x75, 0xb8, 0xe5, 0x04, 0x2c, 0x67, 0x4f, 0xbf, 0x84, 0xad, 0xa9,
	0x02, 0xa3, 0xf3, 0x9c, 0xc9, 0xcf, 0x60, 0x7b, 0x22, 0xb9, 0xeb, 0x59, 0x0e, 0xcf, 0x99, 0x5d,
	0x05, 0xb9, 0x65, 0xf9, 0x22, 0xf9, 0x90, 0x71, 0xc3, 0x34, 0xb8, 0x81, 0xae, 0x41, 0xd1, 0x32,
	0x63, 0x64, 0xd1, 0x32, 0xab, 0x06, 0x54, 0x12, 0x4c, 0x72, 0x84, 0x29, 0x56, 0x85, 0xb2, 0x17,
	0xaf, 0x89, 0x8c, 0x6b, 0x4f, 0x1e, 0xd6, 0xe6, 0x5c, 0xd7, 0xda, 0x64, 0x11, 0x9c, 0xa6, 0x56,
	0x5f, 0x03, 0x4a, 0xa2, 0x84, 0xb3, 0x11, 0xe1, 0x06, 0x0f, 0x7c, 0xf4, 0x1c, 0x56, 0x7d, 0xf1,
	0x2b, 0x2e, 0x7d, 0x7f, 0x69, 0xe9, 0x28, 0x11, 0xc7, 0x69, 0xe1, 0xab, 0xc0, 0x3c, 0xcf, 0xf5,
	0xe2, 0x03, 0x8d, 0x1e, 0xaa, 0xbf, 0x49, 0x70, 0xa3, 0xd7, 0xc9, 0xa4, 0x78, 0x9c, 0x99, 0x51,
	0xab, 0x54, 0x28, 0x0f, 0xe3, 0xad, 0x09, 0xce, 0xab, 0x39, 0xb6, 0x93, 0xf4, 0x02, 0xa7, 0xa9,
	0x48, 0x49, 0x85, 0x17, 0x45, 0x91, 0x47, 0x39, 0x84, 0x27, 0xbb, 0x4e, 0xc4, 0x57, 0xff, 0x91,
	0x60, 0x67, 0x2c, 0x33, 0x69, 0x1a, 0x61, 0x36, 0xeb, 0x73, 0xcb, 0x75, 0xfe, 0x57, 0xc1, 0x87,
	0x99, 0x63, 0x8c, 0x24, 0x3f, 0xce, 0x7d, 0x8c, 0xe3, 0x72, 0x49, 0x89, 0xcc, 0xfe, 0x4b, 0xff,
	0x7d, 0xff, 0x7f, 0x5f, 0x85, 0xeb, 0xbd, 0x10, 0x2d, 0x76, 0xaa, 0x39, 0x4c, 0x3b, 0x41, 0x3d,
	0xb8, 0x1e, 0x58, 0xf4, 0x58, 0x8c, 0x3c, 0xda, 0x0f, 0xaf, 0x78, 0xbc, 0xeb, 0xf9, 0x0c, 0xd3,
	0x13, 0xb2, 0x5d, 0xc0, 0xef, 0x06, 0x56, 0x66, 0x15, 0xfd, 0x22, 0xc1, 0xc3, 0xc0, 0xa2, 0x6e,
	0x34, 0x42, 0x68, 0x3f, 0x9e, 0x8f, 0x74, 0xe0, 0x52, 0xee, 0x52, 0x33, 0x19, 0x91, 0x31, 0x63,
	0xb4, 0xa7, 0xc6, 0x02, 0xc6, 0x7c, 0x73, 0xb6, 0x5d, 0xc0, 0x77, 0x02, 0x6b, 0x29, 0x16, 0xbd,
	0x95, 0xe0, 0x4e, 0x46, 0x9d, 0x61, 0x9a, 0xf4, 0x24, 0x9c, 0xa7, 0x34, 0xe9, 0x77, 0xac, 0xeb,
	0x8a, 0xd0, 0xf5, 0x6c, 0xb9, 0xae, 0xf9, 0x73, 0xbb, 0x5d, 0xc0, 0xdb, 0xa9, 0xa4, 0x99, 0xb0,
	0xc9, 0x5e, 0xcd, 0x50, 0x63, 0x87, 0xf3, 0x3d, 0xd6, 0xb4, 0x92, 0xb7, 0x57, 0x4b, 0x4c, 0xe2,
	0x52, 0xaf, 0xe6, 0x63, 0xd1, 0x4f, 0x12, 0xec, 0x64, 0xd4, 0xf9, 0x8c, 0xd3, 0x7e, 0xea, 0x27,
	0xd4, 0x17, 0x5e, 0x50, 0x59, 0x15, 0xa2, 0xbe, 0x58, 0x2e, 0x6a, 0x9e, 0x1b, 0xb5, 0x0b, 0x78,
	0x33, 0x55, 0x33, 0x03, 0x84, 0x7e, 0x96, 0xe0, 0x6e, 0x46, 0x86, 0x17, 0x9b, 0x12, 0xed, 0x27,
	0xae, 0x94, 0x48, 0x59, 0x13, 0x52, 0xbe, 0x5a, 0x2e, 0x65, 0x91, 0xaf, 0xb5, 0x0b, 0x78, 0x27,
	0x95, 0x33, 0x07, 0x98, 0x74, 0xc6, 0x8b, 0x9d, 0x82, 0xf6, 0x43, 0xab, 0xa0, 0xfd, 0xd8, 0xa9,
	0xe2, 0xe3, 0x2a, 0x2f, 0xed, 0xcc, 0x12, 0x9f, 0x8b, 0x3a, 0x33, 0x1f, 0x84, 0xbe, 0x87, 0xcd,
	0x59, 0x2a, 0x46, 0xe7, 0xb1, 0x82, 0x75, 0xa1, 0xe0, 0xd3, 0xfc, 0x0a, 0xb2, 0x46, 0xd9, 0x2e,
	0xe0, 0xca, 0x14, 0x7b, 0x0c, 0x40, 0x3f, 0xc0, 0xd6, 0x34, 0xf3, 0x28, 0xf4, 0xca, 0x98, 0x1a,
	0x04, 0xf5, 0x67, 0x79, 0xa9, 0x27, 0x6c, 0xb6, 0x5d, 0xc0, 0x1b, 0x13, 0xdc, 0x63, 0x04, 0xb2,
	0x61, 0x23, 0xb0, 0xa8, 0x19, 0x4f, 0x3b, 0xea, 0x47, 0xa6, 0x43, 0x45, 0xf1, 0xca, 0x55, 0x41,
	0x5c, 0x5f, 0x40, 0x3c, 0xcb, 0xac, 0xda, 0x05, 0x7c, 0x23, 0xb0, 0x66, 0xda, 0xd8, 0xdb, 0xe8,
	0xfa, 0xa5, 0x74, 0xe9, 0xab, 0xe9, 0x27, 0xee, 0x11, 0x33, 0xbf, 0x23, 0x98, 0x3f, 0xcf, 0xc1,
	0x3c, 0xdb, 0x7f, 0xa2, 0x9b, 0xb7, 0x18, 0xd3, 0x5c, 0x83, 0x15, 0x51, 0xf1, 0xeb, 0x2b, 0xe5,
	0xa2, 0x5c, 0x0a, 0xef, 0x47, 0xfa, 0x62, 0x0c, 0x18, 0x4f, 0x7b, 0x21, 0x0e, 0x61, 0xf7, 0xcf,
	0xd2, 0xf8, 0x1f, 0x49, 0x52, 0x0f, 0xdd, 0x86, 0xad, 0x56, 0x87, 0x28, 0xda, 0x4b, 0x15, 0x53,
	0xac, 0x12, 0xad, 0x87, 0x15, 0x95, 0xf6, 0x8e, 0x48, 0x57, 0x55, 0x3a, 0x7b, 0x1d, 0xb5, 0x25,
	0x17, 0xd0, 0x26, 0x54, 0xa6, 0x21, 0x44, 0xc5, 0x2f, 0x55, 0x2c, 0x4b, 0x68, 0x07, 0x36, 0xa7,
	0xa3, 0xfb, 0xbd, 0xa6, 0x8a, 0x8f, 0x54, 0x5d, 0x25, 0x72, 0x11, 0x3d, 0x85, 0xfa, 0x34, 0xa2,
	0xd5, 0xd0, 0x1b, 0xcd, 0x06, 0x51, 0x69, 0x57, 0x23, 0xfa, 0x0b, 0xac, 0x12, 0x4a, 0xd4, 0x83,
	0x3d, 0xda, 0xd6, 0x88, 0xae, 0xb6, 0xe4, 0x12, 0xfa, 0x04, 0x3e, 0x5e, 0x90, 0x74, 0xf8, 0x2d,
	0xf9, 0xe6, 0xe0, 0x52, 0xc6, 0x15, 0xf4, 0x04, 0x6a, 0x8b, 0x32, 0xb4, 0xa3, 0x17, 0x5a, 0xab,
	0x79, 0x29, 0x67, 0x05, 0x3d, 0x82, 0xfb, 0x79, 0xa4, 0xe1, 0x16, 0x91, 0x57, 0xd1, 0x03, 0xb8,
	0xbb, 0x54, 0x52, 0x88, 0x5c, 0x43, 0x1f, 0x41, 0x75, 0x1a, 0xd9, 0xe8, 0x76, 0x0f, 0x3a, 0x4a,
	0x43, 0xef, 0x68, 0x47, 0xb4, 0xad, 0xeb, 0x5d, 0xb9, 0x8c, 0xee, 0xc1, 0xed, 0xc5, 0x38, 0x5d,
	0xe9, 0xca, 0xeb, 0xb3, 0x61, 0xaf, 0x3a, 0x47, 0x2d, 0xed, 0x15, 0xa1, 0x2d, 0x95, 0xec, 0xeb,
	0x5a, 0x57, 0x86, 0xdd, 0x5f, 0x25, 0xb8, 0x76, 0xf9, 0xdf, 0x1a, 0xfa, 0x10, 0x6e, 0xa5, 0x99,
	0x44, 0x6f, 0xe8, 0x3d, 0x32, 0x71, 0xb6, 0xb7, 0xe0, 0xe6, 0x24, 0x80, 0xf4, 0x14, 0x45, 0x25,
	0x44, 0x96, 0x66, 0x06, 0xf7, 0x3b, 0xdd, 0xae, 0xda, 0x92, 0x8b, 0x68, 0x03, 0xde, 0x9f, 0x0c,
	0xaa, 0x18, 0x6b, 0x58, 0x2e, 0xcd, 0xca, 0x6b, 0x34, 0x35, 0x2c, 0x8e, 0xa9, 0xa9, 0xfd, 0x7e,
	0xb1, 0x2d, 0xfd, 0x71, 0xb1, 0x2d, 0xfd, 0x75, 0xb1, 0x2d, 0x7d, 0xd7, 0x18, 0x58, 0xfc, 0x34,
	0x38, 0xae, 0xf5, 0xdd, 0x61, 0x7d, 0xe0, 0x19, 0x67, 0x16, 0x37, 0xc2, 0xdb, 0x6d, 0xd8, 0xf5,
	0xf4, 0x23, 0xce, 0x18, 0x59, 0xf5, 0x01, 0x73, 0xea, 0xe2, 0x8b, 0xad, 0x3e, 0x70, 0x27, 0xbe,
	0xea, 0x8e, 0x57, 0x45, 0xe0, 0xe9, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xaa, 0x52, 0xbe,
	0xf7, 0x0d, 0x00, 0x00,
}

func (m *UIBannerClickEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIBannerClickEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIBannerClickEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Alert) > 0 {
		i -= len(m.Alert)
		copy(dAtA[i:], m.Alert)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Alert)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UIOnboardCompleteGoToDashboardClickEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIOnboardCompleteGoToDashboardClickEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIOnboardCompleteGoToDashboardClickEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UIOnboardAddFirstResourceClickEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIOnboardAddFirstResourceClickEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIOnboardAddFirstResourceClickEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UIOnboardAddFirstResourceLaterClickEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIOnboardAddFirstResourceLaterClickEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIOnboardAddFirstResourceLaterClickEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UIOnboardSetCredentialSubmitEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIOnboardSetCredentialSubmitEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIOnboardSetCredentialSubmitEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UIOnboardRegisterChallengeSubmitEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIOnboardRegisterChallengeSubmitEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIOnboardRegisterChallengeSubmitEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LoginFlow) > 0 {
		i -= len(m.LoginFlow)
		copy(dAtA[i:], m.LoginFlow)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.LoginFlow)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MfaType) > 0 {
		i -= len(m.MfaType)
		copy(dAtA[i:], m.MfaType)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.MfaType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UIRecoveryCodesContinueClickEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIRecoveryCodesContinueClickEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIRecoveryCodesContinueClickEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UIRecoveryCodesCopyClickEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIRecoveryCodesCopyClickEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIRecoveryCodesCopyClickEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UIRecoveryCodesPrintClickEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIRecoveryCodesPrintClickEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIRecoveryCodesPrintClickEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DiscoverMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DiscoverMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DiscoverMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DiscoverResourceMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DiscoverResourceMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DiscoverResourceMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Resource != 0 {
		i = encodeVarintUsageevents(dAtA, i, uint64(m.Resource))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DiscoverStepStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DiscoverStepStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DiscoverStepStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Error) > 0 {
		i -= len(m.Error)
		copy(dAtA[i:], m.Error)
		i = encodeVarintUsageevents(dAtA, i, uint64(len(m.Error)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintUsageevents(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UIDiscoverStartedEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIDiscoverStartedEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIDiscoverStartedEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UIDiscoverResourceSelectionEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UIDiscoverResourceSelectionEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UIDiscoverResourceSelectionEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Resource != nil {
		{
			size, err := m.Resource.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UsageEventOneOf) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UsageEventOneOf) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Event != nil {
		{
			size := m.Event.Size()
			i -= size
			if _, err := m.Event.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *UsageEventOneOf_UiBannerClick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiBannerClick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiBannerClick != nil {
		{
			size, err := m.UiBannerClick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiOnboardCompleteGoToDashboardClick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiOnboardCompleteGoToDashboardClick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiOnboardCompleteGoToDashboardClick != nil {
		{
			size, err := m.UiOnboardCompleteGoToDashboardClick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiOnboardAddFirstResourceClick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiOnboardAddFirstResourceClick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiOnboardAddFirstResourceClick != nil {
		{
			size, err := m.UiOnboardAddFirstResourceClick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiOnboardAddFirstResourceLaterClick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiOnboardAddFirstResourceLaterClick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiOnboardAddFirstResourceLaterClick != nil {
		{
			size, err := m.UiOnboardAddFirstResourceLaterClick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiOnboardSetCredentialSubmit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiOnboardSetCredentialSubmit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiOnboardSetCredentialSubmit != nil {
		{
			size, err := m.UiOnboardSetCredentialSubmit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiOnboardRegisterChallengeSubmit) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiOnboardRegisterChallengeSubmit) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiOnboardRegisterChallengeSubmit != nil {
		{
			size, err := m.UiOnboardRegisterChallengeSubmit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiRecoveryCodesContinueClick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiRecoveryCodesContinueClick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiRecoveryCodesContinueClick != nil {
		{
			size, err := m.UiRecoveryCodesContinueClick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiRecoveryCodesCopyClick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiRecoveryCodesCopyClick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiRecoveryCodesCopyClick != nil {
		{
			size, err := m.UiRecoveryCodesCopyClick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiRecoveryCodesPrintClick) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiRecoveryCodesPrintClick) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiRecoveryCodesPrintClick != nil {
		{
			size, err := m.UiRecoveryCodesPrintClick.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiDiscoverStartedEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiDiscoverStartedEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiDiscoverStartedEvent != nil {
		{
			size, err := m.UiDiscoverStartedEvent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	return len(dAtA) - i, nil
}
func (m *UsageEventOneOf_UiDiscoverResourceSelectionEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UsageEventOneOf_UiDiscoverResourceSelectionEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UiDiscoverResourceSelectionEvent != nil {
		{
			size, err := m.UiDiscoverResourceSelectionEvent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintUsageevents(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	return len(dAtA) - i, nil
}
func encodeVarintUsageevents(dAtA []byte, offset int, v uint64) int {
	offset -= sovUsageevents(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UIBannerClickEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Alert)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIOnboardCompleteGoToDashboardClickEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIOnboardAddFirstResourceClickEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIOnboardAddFirstResourceLaterClickEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIOnboardSetCredentialSubmitEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIOnboardRegisterChallengeSubmitEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	l = len(m.MfaType)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	l = len(m.LoginFlow)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIRecoveryCodesContinueClickEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIRecoveryCodesCopyClickEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIRecoveryCodesPrintClickEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DiscoverMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DiscoverResourceMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Resource != 0 {
		n += 1 + sovUsageevents(uint64(m.Resource))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DiscoverStepStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovUsageevents(uint64(m.Status))
	}
	l = len(m.Error)
	if l > 0 {
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIDiscoverStartedEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UIDiscoverResourceSelectionEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.Resource != nil {
		l = m.Resource.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UsageEventOneOf) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Event != nil {
		n += m.Event.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UsageEventOneOf_UiBannerClick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiBannerClick != nil {
		l = m.UiBannerClick.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiOnboardCompleteGoToDashboardClick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiOnboardCompleteGoToDashboardClick != nil {
		l = m.UiOnboardCompleteGoToDashboardClick.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiOnboardAddFirstResourceClick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiOnboardAddFirstResourceClick != nil {
		l = m.UiOnboardAddFirstResourceClick.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiOnboardAddFirstResourceLaterClick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiOnboardAddFirstResourceLaterClick != nil {
		l = m.UiOnboardAddFirstResourceLaterClick.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiOnboardSetCredentialSubmit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiOnboardSetCredentialSubmit != nil {
		l = m.UiOnboardSetCredentialSubmit.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiOnboardRegisterChallengeSubmit) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiOnboardRegisterChallengeSubmit != nil {
		l = m.UiOnboardRegisterChallengeSubmit.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiRecoveryCodesContinueClick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiRecoveryCodesContinueClick != nil {
		l = m.UiRecoveryCodesContinueClick.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiRecoveryCodesCopyClick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiRecoveryCodesCopyClick != nil {
		l = m.UiRecoveryCodesCopyClick.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiRecoveryCodesPrintClick) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiRecoveryCodesPrintClick != nil {
		l = m.UiRecoveryCodesPrintClick.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiDiscoverStartedEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiDiscoverStartedEvent != nil {
		l = m.UiDiscoverStartedEvent.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}
func (m *UsageEventOneOf_UiDiscoverResourceSelectionEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UiDiscoverResourceSelectionEvent != nil {
		l = m.UiDiscoverResourceSelectionEvent.Size()
		n += 1 + l + sovUsageevents(uint64(l))
	}
	return n
}

func sovUsageevents(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozUsageevents(x uint64) (n int) {
	return sovUsageevents(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UIBannerClickEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIBannerClickEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIBannerClickEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alert", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Alert = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIOnboardCompleteGoToDashboardClickEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIOnboardCompleteGoToDashboardClickEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIOnboardCompleteGoToDashboardClickEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIOnboardAddFirstResourceClickEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIOnboardAddFirstResourceClickEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIOnboardAddFirstResourceClickEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIOnboardAddFirstResourceLaterClickEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIOnboardAddFirstResourceLaterClickEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIOnboardAddFirstResourceLaterClickEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIOnboardSetCredentialSubmitEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIOnboardSetCredentialSubmitEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIOnboardSetCredentialSubmitEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIOnboardRegisterChallengeSubmitEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIOnboardRegisterChallengeSubmitEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIOnboardRegisterChallengeSubmitEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MfaType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MfaType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginFlow", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginFlow = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIRecoveryCodesContinueClickEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIRecoveryCodesContinueClickEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIRecoveryCodesContinueClickEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIRecoveryCodesCopyClickEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIRecoveryCodesCopyClickEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIRecoveryCodesCopyClickEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIRecoveryCodesPrintClickEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIRecoveryCodesPrintClickEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIRecoveryCodesPrintClickEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DiscoverMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DiscoverMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DiscoverMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DiscoverResourceMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DiscoverResourceMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DiscoverResourceMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			m.Resource = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Resource |= DiscoverResource(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DiscoverStepStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DiscoverStepStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DiscoverStepStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= DiscoverStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Error = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIDiscoverStartedEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIDiscoverStartedEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIDiscoverStartedEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &DiscoverMetadata{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &DiscoverStepStatus{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UIDiscoverResourceSelectionEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UIDiscoverResourceSelectionEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UIDiscoverResourceSelectionEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &DiscoverMetadata{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resource == nil {
				m.Resource = &DiscoverResourceMetadata{}
			}
			if err := m.Resource.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &DiscoverStepStatus{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UsageEventOneOf) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UsageEventOneOf: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UsageEventOneOf: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiBannerClick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIBannerClickEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiBannerClick{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiOnboardCompleteGoToDashboardClick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIOnboardCompleteGoToDashboardClickEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiOnboardCompleteGoToDashboardClick{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiOnboardAddFirstResourceClick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIOnboardAddFirstResourceClickEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiOnboardAddFirstResourceClick{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiOnboardAddFirstResourceLaterClick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIOnboardAddFirstResourceLaterClickEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiOnboardAddFirstResourceLaterClick{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiOnboardSetCredentialSubmit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIOnboardSetCredentialSubmitEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiOnboardSetCredentialSubmit{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiOnboardRegisterChallengeSubmit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIOnboardRegisterChallengeSubmitEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiOnboardRegisterChallengeSubmit{v}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiRecoveryCodesContinueClick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIRecoveryCodesContinueClickEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiRecoveryCodesContinueClick{v}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiRecoveryCodesCopyClick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIRecoveryCodesCopyClickEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiRecoveryCodesCopyClick{v}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiRecoveryCodesPrintClick", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIRecoveryCodesPrintClickEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiRecoveryCodesPrintClick{v}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiDiscoverStartedEvent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIDiscoverStartedEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiDiscoverStartedEvent{v}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UiDiscoverResourceSelectionEvent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUsageevents
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUsageevents
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &UIDiscoverResourceSelectionEvent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Event = &UsageEventOneOf_UiDiscoverResourceSelectionEvent{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUsageevents(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUsageevents
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUsageevents(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUsageevents
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUsageevents
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthUsageevents
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupUsageevents
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthUsageevents
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthUsageevents        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUsageevents          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupUsageevents = fmt.Errorf("proto: unexpected end of group")
)
