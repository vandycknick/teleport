sets Deployment annotations when specified:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
sets Pod annotations when specified:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should add PersistentVolumeClaim as volume when in custom mode and persistence.enabled is true:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should add PersistentVolumeClaim as volume when in standalone mode and persistence.enabled is true:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should add an operator side-car when operator is enabled:
  1: |
    image: public.ecr.aws/gravitational/teleport-operator:12.0.0-dev
    imagePullPolicy: IfNotPresent
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8081
      initialDelaySeconds: 15
      periodSeconds: 20
    name: operator
    readinessProbe:
      httpGet:
        path: /readyz
        port: 8081
      initialDelaySeconds: 5
      periodSeconds: 10
    volumeMounts:
    - mountPath: /etc/teleport
      name: config
      readOnly: true
    - mountPath: /var/lib/teleport
      name: data
should add emptyDir for data in AWS mode:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should add emptyDir for data in GCP mode:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: gcp-credentials
      secret:
        secretName: teleport-gcp-credentials
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should add insecureSkipProxyTLSVerify to args when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      - --insecure
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should add named PersistentVolumeClaim as volume when in custom mode and persistence.existingClaimName is set:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: teleport-storage
? should add named PersistentVolumeClaim as volume when in standalone mode, persistence.existingClaimName
  is set and persistence.enabled is true
: 1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: teleport-storage
should do enterprise things when when enterprise is set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport-ent:8.3.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /var/lib/license
        name: license
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: license
      secret:
        secretName: license
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should expose diag port:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should have Recreate strategy in standalone mode:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should have multiple replicas when replicaCount is set:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should mount ConfigMap for config in AWS mode:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should mount ConfigMap for config in GCP mode:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: gcp-credentials
      secret:
        secretName: teleport-gcp-credentials
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should mount ConfigMap for config in custom mode:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should mount ConfigMap for config in standalone mode:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should mount GCP credentials for initContainer in GCP mode:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    initContainers:
    - args:
      - echo test
      image: alpine
      name: teleport-init
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: gcp-credentials
      secret:
        secretName: teleport-gcp-credentials
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should mount GCP credentials in GCP mode:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: gcp-credentials
      secret:
        secretName: teleport-gcp-credentials
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should mount TLS certs for initContainer when cert-manager is enabled:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport-tls
        name: teleport-tls
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    initContainers:
    - args:
      - echo test
      image: alpine
      name: teleport-init
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport-tls
        name: teleport-tls
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: gcp-credentials
      secret:
        secretName: teleport-gcp-credentials
    - name: teleport-tls
      secret:
        secretName: teleport-tls
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should mount TLS certs when cert-manager is enabled:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport-tls
        name: teleport-tls
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: gcp-credentials
      secret:
        secretName: teleport-gcp-credentials
    - name: teleport-tls
      secret:
        secretName: teleport-tls
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should mount cert-manager TLS secret when highAvailability.certManager.enabled is true:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-tls
        name: teleport-tls
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: teleport-tls
      secret:
        secretName: teleport-tls
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should mount extraVolumes and extraVolumeMounts:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
      - mountPath: /path/to/mount
        name: my-mount
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
    - name: my-mount
      secret:
        secretName: mySecret
should mount tls.existingCASecretName and set environment when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      env:
      - name: SSL_CERT_FILE
        value: /etc/teleport-tls-ca/ca.pem
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-tls
        name: teleport-tls
        readOnly: true
      - mountPath: /etc/teleport-tls-ca
        name: teleport-tls-ca
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: teleport-tls
      secret:
        secretName: helm-lint-existing-tls-secret
    - name: teleport-tls-ca
      secret:
        secretName: helm-lint-existing-tls-secret-ca
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should mount tls.existingCASecretName and set extra environment when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      env:
      - name: SOME_ENVIRONMENT_VARIABLE
        value: some-value
      - name: SSL_CERT_FILE
        value: /etc/teleport-tls-ca/ca.pem
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-tls
        name: teleport-tls
        readOnly: true
      - mountPath: /etc/teleport-tls-ca
        name: teleport-tls-ca
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: teleport-tls
      secret:
        secretName: helm-lint-existing-tls-secret
    - name: teleport-tls-ca
      secret:
        secretName: helm-lint-existing-tls-secret-ca
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should mount tls.existingSecretName when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-tls
        name: teleport-tls
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: teleport-tls
      secret:
        secretName: helm-lint-existing-tls-secret
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should not add PersistentVolumeClaim as volume when in custom mode and persistence.enabled is false:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should not add PersistentVolumeClaim as volume when in standalone mode and persistence.enabled is false:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
? should not add named PersistentVolumeClaim as volume when in custom mode, persistence.existingClaimName
  is set and persistence.enabled is false
: 1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
? should not add named PersistentVolumeClaim as volume when in standalone mode, persistence.existingClaimName
  is set but persistence.enabled is false
: 1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should not do enterprise things when when enterprise is not set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:8.3.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should not have more than one replica in standalone mode:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should not have strategy in AWS mode:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should not have strategy in GCP mode:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport-secrets
        name: gcp-credentials
        readOnly: true
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - name: gcp-credentials
      secret:
        secretName: teleport-gcp-credentials
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should not have strategy in custom mode:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should not mount TLS secrets when when highAvailability.certManager.enabled is false and tls.existingSecretName is not set:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should not mount secret when credentialSecretName is blank in values:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should not set securityContext when is empty object (default value):
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should provision initContainer correctly when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      env:
      - name: SOME_ENVIRONMENT_VARIABLE
        value: some-value
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 2
          memory: 4Gi
        requests:
          cpu: 1
          memory: 2Gi
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    initContainers:
    - args:
      - echo test
      image: alpine
      name: teleport-init
      resources:
        limits:
          cpu: 2
          memory: 4Gi
        requests:
          cpu: 1
          memory: 2Gi
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set affinity when set in values:
  1: |
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: gravitational.io/dedicated
              operator: In
              values:
              - teleport
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set environment when extraEnv set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      env:
      - name: SOME_ENVIRONMENT_VARIABLE
        value: some-value
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set imagePullPolicy when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set postStart command if set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/echo
            - test
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set priorityClassName when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    priorityClassName: system-cluster-critical
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set probeTimeoutSeconds when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 5
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 5
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set required affinity when highAvailability.requireAntiAffinity is set:
  1: |
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - RELEASE-NAME
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
should set resources when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 2
          memory: 4Gi
        requests:
          cpu: 1
          memory: 2Gi
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set securityContext when set in values:
  1: |
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 99
        runAsNonRoot: true
        runAsUser: 99
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - name: data
      persistentVolumeClaim:
        claimName: RELEASE-NAME
should set tolerations when set in values:
  1: |
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - RELEASE-NAME
            topologyKey: kubernetes.io/hostname
          weight: 50
    containers:
    - args:
      - --diag-addr=0.0.0.0:3000
      image: public.ecr.aws/gravitational/teleport:12.0.0-dev
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      name: teleport
      ports:
      - containerPort: 3000
        name: diag
        protocol: TCP
      readinessProbe:
        failureThreshold: 12
        httpGet:
          path: /readyz
          port: diag
        initialDelaySeconds: 5
        periodSeconds: 5
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/teleport
        name: config
        readOnly: true
      - mountPath: /var/lib/teleport
        name: data
    serviceAccountName: RELEASE-NAME
    tolerations:
    - effect: NoExecute
      key: dedicated
      operator: Equal
      value: teleport
    - effect: NoSchedule
      key: dedicated
      operator: Equal
      value: teleport
    volumes:
    - configMap:
        name: RELEASE-NAME
      name: config
    - emptyDir: {}
      name: data
