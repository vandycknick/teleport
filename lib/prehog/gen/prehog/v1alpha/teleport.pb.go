// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: prehog/v1alpha/teleport.proto

package prehogv1alpha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DiscoverResource represents a resource type.
type DiscoverResource int32

const (
	DiscoverResource_DISCOVER_RESOURCE_UNSPECIFIED                   DiscoverResource = 0
	DiscoverResource_DISCOVER_RESOURCE_SERVER                        DiscoverResource = 1
	DiscoverResource_DISCOVER_RESOURCE_KUBERNETES                    DiscoverResource = 2
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_POSTGRES_SELF_HOSTED DiscoverResource = 3
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_MYSQL_SELF_HOSTED    DiscoverResource = 4
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_MONGODB_SELF_HOSTED  DiscoverResource = 5
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_POSTGRES_RDS         DiscoverResource = 6
	DiscoverResource_DISCOVER_RESOURCE_DATABASE_MYSQL_RDS            DiscoverResource = 7
	DiscoverResource_DISCOVER_RESOURCE_APPLICATION_HTTP              DiscoverResource = 8
	DiscoverResource_DISCOVER_RESOURCE_APPLICATION_TCP               DiscoverResource = 9
	DiscoverResource_DISCOVER_RESOURCE_WINDOWS_DESKTOP               DiscoverResource = 10
)

// Enum value maps for DiscoverResource.
var (
	DiscoverResource_name = map[int32]string{
		0:  "DISCOVER_RESOURCE_UNSPECIFIED",
		1:  "DISCOVER_RESOURCE_SERVER",
		2:  "DISCOVER_RESOURCE_KUBERNETES",
		3:  "DISCOVER_RESOURCE_DATABASE_POSTGRES_SELF_HOSTED",
		4:  "DISCOVER_RESOURCE_DATABASE_MYSQL_SELF_HOSTED",
		5:  "DISCOVER_RESOURCE_DATABASE_MONGODB_SELF_HOSTED",
		6:  "DISCOVER_RESOURCE_DATABASE_POSTGRES_RDS",
		7:  "DISCOVER_RESOURCE_DATABASE_MYSQL_RDS",
		8:  "DISCOVER_RESOURCE_APPLICATION_HTTP",
		9:  "DISCOVER_RESOURCE_APPLICATION_TCP",
		10: "DISCOVER_RESOURCE_WINDOWS_DESKTOP",
	}
	DiscoverResource_value = map[string]int32{
		"DISCOVER_RESOURCE_UNSPECIFIED":                   0,
		"DISCOVER_RESOURCE_SERVER":                        1,
		"DISCOVER_RESOURCE_KUBERNETES":                    2,
		"DISCOVER_RESOURCE_DATABASE_POSTGRES_SELF_HOSTED": 3,
		"DISCOVER_RESOURCE_DATABASE_MYSQL_SELF_HOSTED":    4,
		"DISCOVER_RESOURCE_DATABASE_MONGODB_SELF_HOSTED":  5,
		"DISCOVER_RESOURCE_DATABASE_POSTGRES_RDS":         6,
		"DISCOVER_RESOURCE_DATABASE_MYSQL_RDS":            7,
		"DISCOVER_RESOURCE_APPLICATION_HTTP":              8,
		"DISCOVER_RESOURCE_APPLICATION_TCP":               9,
		"DISCOVER_RESOURCE_WINDOWS_DESKTOP":               10,
	}
)

func (x DiscoverResource) Enum() *DiscoverResource {
	p := new(DiscoverResource)
	*p = x
	return p
}

func (x DiscoverResource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoverResource) Descriptor() protoreflect.EnumDescriptor {
	return file_prehog_v1alpha_teleport_proto_enumTypes[0].Descriptor()
}

func (DiscoverResource) Type() protoreflect.EnumType {
	return &file_prehog_v1alpha_teleport_proto_enumTypes[0]
}

func (x DiscoverResource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoverResource.Descriptor instead.
func (DiscoverResource) EnumDescriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{0}
}

// DiscoverStatus represents a Discover Step outcome.
type DiscoverStatus int32

const (
	DiscoverStatus_DISCOVER_STATUS_UNSPECIFIED DiscoverStatus = 0
	// The user tried to complete the action and it succeeded.
	DiscoverStatus_DISCOVER_STATUS_SUCCESS DiscoverStatus = 1
	// The system skipped the step.
	// For example:
	// When setting up a Database and there's already a Database Service proxying the DB.
	// In this case the Database Agent installation is skipped.
	DiscoverStatus_DISCOVER_STATUS_SKIPPED DiscoverStatus = 2
	// The user tried to complete the action and it failed.
	DiscoverStatus_DISCOVER_STATUS_ERROR DiscoverStatus = 3
	// The user did not complete the action and left the wizard.
	DiscoverStatus_DISCOVER_STATUS_ABORTED DiscoverStatus = 4
)

// Enum value maps for DiscoverStatus.
var (
	DiscoverStatus_name = map[int32]string{
		0: "DISCOVER_STATUS_UNSPECIFIED",
		1: "DISCOVER_STATUS_SUCCESS",
		2: "DISCOVER_STATUS_SKIPPED",
		3: "DISCOVER_STATUS_ERROR",
		4: "DISCOVER_STATUS_ABORTED",
	}
	DiscoverStatus_value = map[string]int32{
		"DISCOVER_STATUS_UNSPECIFIED": 0,
		"DISCOVER_STATUS_SUCCESS":     1,
		"DISCOVER_STATUS_SKIPPED":     2,
		"DISCOVER_STATUS_ERROR":       3,
		"DISCOVER_STATUS_ABORTED":     4,
	}
)

func (x DiscoverStatus) Enum() *DiscoverStatus {
	p := new(DiscoverStatus)
	*p = x
	return p
}

func (x DiscoverStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoverStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_prehog_v1alpha_teleport_proto_enumTypes[1].Descriptor()
}

func (DiscoverStatus) Type() protoreflect.EnumType {
	return &file_prehog_v1alpha_teleport_proto_enumTypes[1]
}

func (x DiscoverStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoverStatus.Descriptor instead.
func (DiscoverStatus) EnumDescriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{1}
}

type UserLoginEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// local/github/saml/oidc
	ConnectorType string `protobuf:"bytes,2,opt,name=connector_type,json=connectorType,proto3" json:"connector_type,omitempty"`
}

func (x *UserLoginEvent) Reset() {
	*x = UserLoginEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginEvent) ProtoMessage() {}

func (x *UserLoginEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginEvent.ProtoReflect.Descriptor instead.
func (*UserLoginEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{0}
}

func (x *UserLoginEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserLoginEvent) GetConnectorType() string {
	if x != nil {
		return x.ConnectorType
	}
	return ""
}

type SSOCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// github/saml/oidc
	ConnectorType string `protobuf:"bytes,1,opt,name=connector_type,json=connectorType,proto3" json:"connector_type,omitempty"`
}

func (x *SSOCreateEvent) Reset() {
	*x = SSOCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSOCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSOCreateEvent) ProtoMessage() {}

func (x *SSOCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSOCreateEvent.ProtoReflect.Descriptor instead.
func (*SSOCreateEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{1}
}

func (x *SSOCreateEvent) GetConnectorType() string {
	if x != nil {
		return x.ConnectorType
	}
	return ""
}

type ResourceCreateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO(espadolini): is a resource the teleport process or the
	// databases/desktops/kube clusters accessed through it?
	ResourceType string `protobuf:"bytes,1,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
}

func (x *ResourceCreateEvent) Reset() {
	*x = ResourceCreateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceCreateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCreateEvent) ProtoMessage() {}

func (x *ResourceCreateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCreateEvent.ProtoReflect.Descriptor instead.
func (*ResourceCreateEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceCreateEvent) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type SessionStartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// ssh/kube/desktop, maybe db?
	SessionType string `protobuf:"bytes,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
}

func (x *SessionStartEvent) Reset() {
	*x = SessionStartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStartEvent) ProtoMessage() {}

func (x *SessionStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStartEvent.ProtoReflect.Descriptor instead.
func (*SessionStartEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{3}
}

func (x *SessionStartEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SessionStartEvent) GetSessionType() string {
	if x != nil {
		return x.SessionType
	}
	return ""
}

type UIBannerClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// cluster alert name
	Alert string `protobuf:"bytes,2,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *UIBannerClickEvent) Reset() {
	*x = UIBannerClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIBannerClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIBannerClickEvent) ProtoMessage() {}

func (x *UIBannerClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIBannerClickEvent.ProtoReflect.Descriptor instead.
func (*UIBannerClickEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{4}
}

func (x *UIBannerClickEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UIBannerClickEvent) GetAlert() string {
	if x != nil {
		return x.Alert
	}
	return ""
}

type UIOnboardCompleteGoToDashboardClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UIOnboardCompleteGoToDashboardClickEvent) Reset() {
	*x = UIOnboardCompleteGoToDashboardClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIOnboardCompleteGoToDashboardClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIOnboardCompleteGoToDashboardClickEvent) ProtoMessage() {}

func (x *UIOnboardCompleteGoToDashboardClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIOnboardCompleteGoToDashboardClickEvent.ProtoReflect.Descriptor instead.
func (*UIOnboardCompleteGoToDashboardClickEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{5}
}

func (x *UIOnboardCompleteGoToDashboardClickEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UIOnboardAddFirstResourceClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UIOnboardAddFirstResourceClickEvent) Reset() {
	*x = UIOnboardAddFirstResourceClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIOnboardAddFirstResourceClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIOnboardAddFirstResourceClickEvent) ProtoMessage() {}

func (x *UIOnboardAddFirstResourceClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIOnboardAddFirstResourceClickEvent.ProtoReflect.Descriptor instead.
func (*UIOnboardAddFirstResourceClickEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{6}
}

func (x *UIOnboardAddFirstResourceClickEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UIOnboardAddFirstResourceLaterClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UIOnboardAddFirstResourceLaterClickEvent) Reset() {
	*x = UIOnboardAddFirstResourceLaterClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIOnboardAddFirstResourceLaterClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIOnboardAddFirstResourceLaterClickEvent) ProtoMessage() {}

func (x *UIOnboardAddFirstResourceLaterClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIOnboardAddFirstResourceLaterClickEvent.ProtoReflect.Descriptor instead.
func (*UIOnboardAddFirstResourceLaterClickEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{7}
}

func (x *UIOnboardAddFirstResourceLaterClickEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UIOnboardSetCredentialSubmitEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UIOnboardSetCredentialSubmitEvent) Reset() {
	*x = UIOnboardSetCredentialSubmitEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIOnboardSetCredentialSubmitEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIOnboardSetCredentialSubmitEvent) ProtoMessage() {}

func (x *UIOnboardSetCredentialSubmitEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIOnboardSetCredentialSubmitEvent.ProtoReflect.Descriptor instead.
func (*UIOnboardSetCredentialSubmitEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{8}
}

func (x *UIOnboardSetCredentialSubmitEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UIOnboardRegisterChallengeSubmitEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName  string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	MfaType   string `protobuf:"bytes,2,opt,name=mfa_type,json=mfaType,proto3" json:"mfa_type,omitempty"`
	LoginFlow string `protobuf:"bytes,3,opt,name=login_flow,json=loginFlow,proto3" json:"login_flow,omitempty"`
}

func (x *UIOnboardRegisterChallengeSubmitEvent) Reset() {
	*x = UIOnboardRegisterChallengeSubmitEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIOnboardRegisterChallengeSubmitEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIOnboardRegisterChallengeSubmitEvent) ProtoMessage() {}

func (x *UIOnboardRegisterChallengeSubmitEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIOnboardRegisterChallengeSubmitEvent.ProtoReflect.Descriptor instead.
func (*UIOnboardRegisterChallengeSubmitEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{9}
}

func (x *UIOnboardRegisterChallengeSubmitEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UIOnboardRegisterChallengeSubmitEvent) GetMfaType() string {
	if x != nil {
		return x.MfaType
	}
	return ""
}

func (x *UIOnboardRegisterChallengeSubmitEvent) GetLoginFlow() string {
	if x != nil {
		return x.LoginFlow
	}
	return ""
}

type UIRecoveryCodesContinueClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UIRecoveryCodesContinueClickEvent) Reset() {
	*x = UIRecoveryCodesContinueClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIRecoveryCodesContinueClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIRecoveryCodesContinueClickEvent) ProtoMessage() {}

func (x *UIRecoveryCodesContinueClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIRecoveryCodesContinueClickEvent.ProtoReflect.Descriptor instead.
func (*UIRecoveryCodesContinueClickEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{10}
}

func (x *UIRecoveryCodesContinueClickEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UIRecoveryCodesCopyClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UIRecoveryCodesCopyClickEvent) Reset() {
	*x = UIRecoveryCodesCopyClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIRecoveryCodesCopyClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIRecoveryCodesCopyClickEvent) ProtoMessage() {}

func (x *UIRecoveryCodesCopyClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIRecoveryCodesCopyClickEvent.ProtoReflect.Descriptor instead.
func (*UIRecoveryCodesCopyClickEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{11}
}

func (x *UIRecoveryCodesCopyClickEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type UIRecoveryCodesPrintClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *UIRecoveryCodesPrintClickEvent) Reset() {
	*x = UIRecoveryCodesPrintClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIRecoveryCodesPrintClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIRecoveryCodesPrintClickEvent) ProtoMessage() {}

func (x *UIRecoveryCodesPrintClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIRecoveryCodesPrintClickEvent.ProtoReflect.Descriptor instead.
func (*UIRecoveryCodesPrintClickEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{12}
}

func (x *UIRecoveryCodesPrintClickEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// DiscoverMetadata contains common metadata for Discover related events.
type DiscoverMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Uniquely identifies Discover wizard "session". Will allow to correlate
	// events within the same Discover wizard run.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// anonymized
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *DiscoverMetadata) Reset() {
	*x = DiscoverMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverMetadata) ProtoMessage() {}

func (x *DiscoverMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverMetadata.ProtoReflect.Descriptor instead.
func (*DiscoverMetadata) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{13}
}

func (x *DiscoverMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiscoverMetadata) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

// DiscoverResourceMetadata contains common metadata identifying resource type being added.
type DiscoverResourceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource type that is being added.
	Resource DiscoverResource `protobuf:"varint,1,opt,name=resource,proto3,enum=prehog.v1alpha.DiscoverResource" json:"resource,omitempty"`
}

func (x *DiscoverResourceMetadata) Reset() {
	*x = DiscoverResourceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverResourceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverResourceMetadata) ProtoMessage() {}

func (x *DiscoverResourceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverResourceMetadata.ProtoReflect.Descriptor instead.
func (*DiscoverResourceMetadata) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{14}
}

func (x *DiscoverResourceMetadata) GetResource() DiscoverResource {
	if x != nil {
		return x.Resource
	}
	return DiscoverResource_DISCOVER_RESOURCE_UNSPECIFIED
}

// DiscoverStepStatus contains fields that track a particular step outcome,
// for example connection test failed or succeeded, or user aborted the step.
type DiscoverStepStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates the step outcome.
	Status DiscoverStatus `protobuf:"varint,1,opt,name=status,proto3,enum=prehog.v1alpha.DiscoverStatus" json:"status,omitempty"`
	// Contains error details in case of Error Status.
	// We have to be careful to not include any identifyable infomation like server addresses here.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DiscoverStepStatus) Reset() {
	*x = DiscoverStepStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverStepStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverStepStatus) ProtoMessage() {}

func (x *DiscoverStepStatus) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverStepStatus.ProtoReflect.Descriptor instead.
func (*DiscoverStepStatus) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{15}
}

func (x *DiscoverStepStatus) GetStatus() DiscoverStatus {
	if x != nil {
		return x.Status
	}
	return DiscoverStatus_DISCOVER_STATUS_UNSPECIFIED
}

func (x *DiscoverStepStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// UIDiscoverStartedEvent is emitted when the wizard opens.
type UIDiscoverStartedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *DiscoverMetadata   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status   *DiscoverStepStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UIDiscoverStartedEvent) Reset() {
	*x = UIDiscoverStartedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIDiscoverStartedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIDiscoverStartedEvent) ProtoMessage() {}

func (x *UIDiscoverStartedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIDiscoverStartedEvent.ProtoReflect.Descriptor instead.
func (*UIDiscoverStartedEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{16}
}

func (x *UIDiscoverStartedEvent) GetMetadata() *DiscoverMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UIDiscoverStartedEvent) GetStatus() *DiscoverStepStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// UIDiscoverResourceSelectionEvent is emitted when user selected resource type to add
// and proceeded to the next step.
type UIDiscoverResourceSelectionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *DiscoverMetadata         `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Resource *DiscoverResourceMetadata `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Status   *DiscoverStepStatus       `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UIDiscoverResourceSelectionEvent) Reset() {
	*x = UIDiscoverResourceSelectionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UIDiscoverResourceSelectionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UIDiscoverResourceSelectionEvent) ProtoMessage() {}

func (x *UIDiscoverResourceSelectionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UIDiscoverResourceSelectionEvent.ProtoReflect.Descriptor instead.
func (*UIDiscoverResourceSelectionEvent) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{17}
}

func (x *UIDiscoverResourceSelectionEvent) GetMetadata() *DiscoverMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UIDiscoverResourceSelectionEvent) GetResource() *DiscoverResourceMetadata {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *UIDiscoverResourceSelectionEvent) GetStatus() *DiscoverStepStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type SubmitEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// anonymized
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// optional, will default to the ingest time if unset
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Event:
	//
	//	*SubmitEventRequest_UserLogin
	//	*SubmitEventRequest_SsoCreate
	//	*SubmitEventRequest_ResourceCreate
	//	*SubmitEventRequest_SessionStart
	//	*SubmitEventRequest_UiBannerClick
	//	*SubmitEventRequest_UiOnboardCompleteGoToDashboardClick
	//	*SubmitEventRequest_UiOnboardAddFirstResourceClick
	//	*SubmitEventRequest_UiOnboardAddFirstResourceLaterClick
	//	*SubmitEventRequest_UiOnboardSetCredentialSubmit
	//	*SubmitEventRequest_UiOnboardRegisterChallengeSubmit
	//	*SubmitEventRequest_UiRecoveryCodesContinueClick
	//	*SubmitEventRequest_UiRecoveryCodesCopyClick
	//	*SubmitEventRequest_UiRecoveryCodesPrintClick
	//	*SubmitEventRequest_UiDiscoverStartedEvent
	//	*SubmitEventRequest_UiDiscoverResourceSelectionEvent
	Event isSubmitEventRequest_Event `protobuf_oneof:"event"`
}

func (x *SubmitEventRequest) Reset() {
	*x = SubmitEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitEventRequest) ProtoMessage() {}

func (x *SubmitEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitEventRequest.ProtoReflect.Descriptor instead.
func (*SubmitEventRequest) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{18}
}

func (x *SubmitEventRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *SubmitEventRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *SubmitEventRequest) GetEvent() isSubmitEventRequest_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *SubmitEventRequest) GetUserLogin() *UserLoginEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UserLogin); ok {
		return x.UserLogin
	}
	return nil
}

func (x *SubmitEventRequest) GetSsoCreate() *SSOCreateEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_SsoCreate); ok {
		return x.SsoCreate
	}
	return nil
}

func (x *SubmitEventRequest) GetResourceCreate() *ResourceCreateEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_ResourceCreate); ok {
		return x.ResourceCreate
	}
	return nil
}

func (x *SubmitEventRequest) GetSessionStart() *SessionStartEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_SessionStart); ok {
		return x.SessionStart
	}
	return nil
}

func (x *SubmitEventRequest) GetUiBannerClick() *UIBannerClickEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiBannerClick); ok {
		return x.UiBannerClick
	}
	return nil
}

func (x *SubmitEventRequest) GetUiOnboardCompleteGoToDashboardClick() *UIOnboardCompleteGoToDashboardClickEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiOnboardCompleteGoToDashboardClick); ok {
		return x.UiOnboardCompleteGoToDashboardClick
	}
	return nil
}

func (x *SubmitEventRequest) GetUiOnboardAddFirstResourceClick() *UIOnboardAddFirstResourceClickEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiOnboardAddFirstResourceClick); ok {
		return x.UiOnboardAddFirstResourceClick
	}
	return nil
}

func (x *SubmitEventRequest) GetUiOnboardAddFirstResourceLaterClick() *UIOnboardAddFirstResourceLaterClickEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiOnboardAddFirstResourceLaterClick); ok {
		return x.UiOnboardAddFirstResourceLaterClick
	}
	return nil
}

func (x *SubmitEventRequest) GetUiOnboardSetCredentialSubmit() *UIOnboardSetCredentialSubmitEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiOnboardSetCredentialSubmit); ok {
		return x.UiOnboardSetCredentialSubmit
	}
	return nil
}

func (x *SubmitEventRequest) GetUiOnboardRegisterChallengeSubmit() *UIOnboardRegisterChallengeSubmitEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiOnboardRegisterChallengeSubmit); ok {
		return x.UiOnboardRegisterChallengeSubmit
	}
	return nil
}

func (x *SubmitEventRequest) GetUiRecoveryCodesContinueClick() *UIRecoveryCodesContinueClickEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiRecoveryCodesContinueClick); ok {
		return x.UiRecoveryCodesContinueClick
	}
	return nil
}

func (x *SubmitEventRequest) GetUiRecoveryCodesCopyClick() *UIRecoveryCodesCopyClickEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiRecoveryCodesCopyClick); ok {
		return x.UiRecoveryCodesCopyClick
	}
	return nil
}

func (x *SubmitEventRequest) GetUiRecoveryCodesPrintClick() *UIRecoveryCodesPrintClickEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiRecoveryCodesPrintClick); ok {
		return x.UiRecoveryCodesPrintClick
	}
	return nil
}

func (x *SubmitEventRequest) GetUiDiscoverStartedEvent() *UIDiscoverStartedEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiDiscoverStartedEvent); ok {
		return x.UiDiscoverStartedEvent
	}
	return nil
}

func (x *SubmitEventRequest) GetUiDiscoverResourceSelectionEvent() *UIDiscoverResourceSelectionEvent {
	if x, ok := x.GetEvent().(*SubmitEventRequest_UiDiscoverResourceSelectionEvent); ok {
		return x.UiDiscoverResourceSelectionEvent
	}
	return nil
}

type isSubmitEventRequest_Event interface {
	isSubmitEventRequest_Event()
}

type SubmitEventRequest_UserLogin struct {
	UserLogin *UserLoginEvent `protobuf:"bytes,3,opt,name=user_login,json=userLogin,proto3,oneof"`
}

type SubmitEventRequest_SsoCreate struct {
	SsoCreate *SSOCreateEvent `protobuf:"bytes,4,opt,name=sso_create,json=ssoCreate,proto3,oneof"`
}

type SubmitEventRequest_ResourceCreate struct {
	ResourceCreate *ResourceCreateEvent `protobuf:"bytes,5,opt,name=resource_create,json=resourceCreate,proto3,oneof"`
}

type SubmitEventRequest_SessionStart struct {
	SessionStart *SessionStartEvent `protobuf:"bytes,6,opt,name=session_start,json=sessionStart,proto3,oneof"`
}

type SubmitEventRequest_UiBannerClick struct {
	UiBannerClick *UIBannerClickEvent `protobuf:"bytes,7,opt,name=ui_banner_click,json=uiBannerClick,proto3,oneof"`
}

type SubmitEventRequest_UiOnboardCompleteGoToDashboardClick struct {
	UiOnboardCompleteGoToDashboardClick *UIOnboardCompleteGoToDashboardClickEvent `protobuf:"bytes,9,opt,name=ui_onboard_complete_go_to_dashboard_click,json=uiOnboardCompleteGoToDashboardClick,proto3,oneof"`
}

type SubmitEventRequest_UiOnboardAddFirstResourceClick struct {
	UiOnboardAddFirstResourceClick *UIOnboardAddFirstResourceClickEvent `protobuf:"bytes,10,opt,name=ui_onboard_add_first_resource_click,json=uiOnboardAddFirstResourceClick,proto3,oneof"`
}

type SubmitEventRequest_UiOnboardAddFirstResourceLaterClick struct {
	UiOnboardAddFirstResourceLaterClick *UIOnboardAddFirstResourceLaterClickEvent `protobuf:"bytes,11,opt,name=ui_onboard_add_first_resource_later_click,json=uiOnboardAddFirstResourceLaterClick,proto3,oneof"`
}

type SubmitEventRequest_UiOnboardSetCredentialSubmit struct {
	UiOnboardSetCredentialSubmit *UIOnboardSetCredentialSubmitEvent `protobuf:"bytes,12,opt,name=ui_onboard_set_credential_submit,json=uiOnboardSetCredentialSubmit,proto3,oneof"`
}

type SubmitEventRequest_UiOnboardRegisterChallengeSubmit struct {
	UiOnboardRegisterChallengeSubmit *UIOnboardRegisterChallengeSubmitEvent `protobuf:"bytes,13,opt,name=ui_onboard_register_challenge_submit,json=uiOnboardRegisterChallengeSubmit,proto3,oneof"`
}

type SubmitEventRequest_UiRecoveryCodesContinueClick struct {
	UiRecoveryCodesContinueClick *UIRecoveryCodesContinueClickEvent `protobuf:"bytes,14,opt,name=ui_recovery_codes_continue_click,json=uiRecoveryCodesContinueClick,proto3,oneof"`
}

type SubmitEventRequest_UiRecoveryCodesCopyClick struct {
	UiRecoveryCodesCopyClick *UIRecoveryCodesCopyClickEvent `protobuf:"bytes,15,opt,name=ui_recovery_codes_copy_click,json=uiRecoveryCodesCopyClick,proto3,oneof"`
}

type SubmitEventRequest_UiRecoveryCodesPrintClick struct {
	UiRecoveryCodesPrintClick *UIRecoveryCodesPrintClickEvent `protobuf:"bytes,16,opt,name=ui_recovery_codes_print_click,json=uiRecoveryCodesPrintClick,proto3,oneof"`
}

type SubmitEventRequest_UiDiscoverStartedEvent struct {
	UiDiscoverStartedEvent *UIDiscoverStartedEvent `protobuf:"bytes,17,opt,name=ui_discover_started_event,json=uiDiscoverStartedEvent,proto3,oneof"`
}

type SubmitEventRequest_UiDiscoverResourceSelectionEvent struct {
	UiDiscoverResourceSelectionEvent *UIDiscoverResourceSelectionEvent `protobuf:"bytes,18,opt,name=ui_discover_resource_selection_event,json=uiDiscoverResourceSelectionEvent,proto3,oneof"`
}

func (*SubmitEventRequest_UserLogin) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_SsoCreate) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_ResourceCreate) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_SessionStart) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiBannerClick) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiOnboardCompleteGoToDashboardClick) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiOnboardAddFirstResourceClick) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiOnboardAddFirstResourceLaterClick) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiOnboardSetCredentialSubmit) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiOnboardRegisterChallengeSubmit) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiRecoveryCodesContinueClick) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiRecoveryCodesCopyClick) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiRecoveryCodesPrintClick) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiDiscoverStartedEvent) isSubmitEventRequest_Event() {}

func (*SubmitEventRequest_UiDiscoverResourceSelectionEvent) isSubmitEventRequest_Event() {}

type SubmitEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitEventResponse) Reset() {
	*x = SubmitEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitEventResponse) ProtoMessage() {}

func (x *SubmitEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitEventResponse.ProtoReflect.Descriptor instead.
func (*SubmitEventResponse) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{19}
}

type HelloTeleportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HelloTeleportRequest) Reset() {
	*x = HelloTeleportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloTeleportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloTeleportRequest) ProtoMessage() {}

func (x *HelloTeleportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloTeleportRequest.ProtoReflect.Descriptor instead.
func (*HelloTeleportRequest) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{20}
}

type HelloTeleportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HelloTeleportResponse) Reset() {
	*x = HelloTeleportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_prehog_v1alpha_teleport_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloTeleportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloTeleportResponse) ProtoMessage() {}

func (x *HelloTeleportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1alpha_teleport_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloTeleportResponse.ProtoReflect.Descriptor instead.
func (*HelloTeleportResponse) Descriptor() ([]byte, []int) {
	return file_prehog_v1alpha_teleport_proto_rawDescGZIP(), []int{21}
}

var File_prehog_v1alpha_teleport_proto protoreflect.FileDescriptor

var file_prehog_v1alpha_teleport_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x54, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x37, 0x0a, 0x0e, 0x53, 0x53, 0x4f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x3a, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x47, 0x0a, 0x12, 0x55, 0x49, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x47, 0x0a, 0x28, 0x55, 0x49, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f,
	0x54, 0x6f, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x42, 0x0a, 0x23, 0x55, 0x49, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x41,
	0x64, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x28, 0x55, 0x49, 0x4f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x40, 0x0a, 0x21, 0x55, 0x49, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x7e, 0x0a, 0x25, 0x55, 0x49, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x66, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x66, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x6c, 0x6f,
	0x77, 0x22, 0x40, 0x0a, 0x21, 0x55, 0x49, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x1d, 0x55, 0x49, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x70, 0x79, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3d, 0x0a, 0x1e, 0x55, 0x49, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x3f, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x58, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x62, 0x0a, 0x12, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x92, 0x01, 0x0a, 0x16, 0x55, 0x49, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x20, 0x55, 0x49, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x65, 0x68,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x0e, 0x0a, 0x12, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x3f,
	0x0a, 0x0a, 0x73, 0x73, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x53, 0x4f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73, 0x73, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x4e, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x48, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x4c, 0x0a, 0x0f, 0x75, 0x69, 0x5f,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x75, 0x69, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x92, 0x01, 0x0a, 0x29, 0x75, 0x69, 0x5f, 0x6f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x67, 0x6f, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72,
	0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f,
	0x54, 0x6f, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x23, 0x75, 0x69, 0x4f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x54, 0x6f, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x82, 0x01, 0x0a,
	0x23, 0x75, 0x69, 0x5f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x5f,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x6c, 0x69, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x65,
	0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x4f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x1e, 0x75, 0x69, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x12, 0x92, 0x01, 0x0a, 0x29, 0x75, 0x69, 0x5f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x41, 0x64, 0x64, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4c, 0x61, 0x74, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x23, 0x75, 0x69, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x61, 0x74, 0x65,
	0x72, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x7b, 0x0a, 0x20, 0x75, 0x69, 0x5f, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x55, 0x49, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x75, 0x69, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x65, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x24, 0x75, 0x69, 0x5f, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x20, 0x75, 0x69, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x7b, 0x0a,
	0x20, 0x75, 0x69, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x75, 0x69,
	0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x6f, 0x0a, 0x1c, 0x75, 0x69,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x5f,
	0x63, 0x6f, 0x70, 0x79, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x55, 0x49, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x43, 0x6f, 0x70, 0x79, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x18, 0x75, 0x69, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x43, 0x6f, 0x70, 0x79, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x72, 0x0a, 0x1d, 0x75,
	0x69, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x19, 0x75, 0x69, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12,
	0x63, 0x0a, 0x19, 0x75, 0x69, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x16, 0x75, 0x69,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x24, 0x75, 0x69, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x49, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x20, 0x75, 0x69, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x52, 0x1c, 0x75, 0x69, 0x5f, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a,
	0x14, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x54, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xdd,
	0x03, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56,
	0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52,
	0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4b, 0x55, 0x42, 0x45, 0x52, 0x4e,
	0x45, 0x54, 0x45, 0x53, 0x10, 0x02, 0x12, 0x33, 0x0a, 0x2f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56,
	0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41,
	0x42, 0x41, 0x53, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x5f, 0x53, 0x45,
	0x4c, 0x46, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x30, 0x0a, 0x2c, 0x44,
	0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x53, 0x45, 0x4c, 0x46, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x32, 0x0a,
	0x2e, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x47,
	0x4f, 0x44, 0x42, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x2b, 0x0a, 0x27, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f,
	0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x5f, 0x52, 0x44, 0x53, 0x10, 0x06, 0x12, 0x28,
	0x0a, 0x24, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x4d, 0x59, 0x53,
	0x51, 0x4c, 0x5f, 0x52, 0x44, 0x53, 0x10, 0x07, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x49, 0x53, 0x43,
	0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x50,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x08,
	0x12, 0x25, 0x0a, 0x21, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x43, 0x50, 0x10, 0x09, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x56, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x57, 0x49, 0x4e,
	0x44, 0x4f, 0x57, 0x53, 0x5f, 0x44, 0x45, 0x53, 0x4b, 0x54, 0x4f, 0x50, 0x10, 0x0a, 0x2a, 0xa3,
	0x01, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x1b, 0x0a, 0x17, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x56, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54,
	0x45, 0x44, 0x10, 0x04, 0x32, 0xd4, 0x01, 0x0a, 0x18, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x58, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x22, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0d, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x2e, 0x70,
	0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xcb, 0x01, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x42, 0x0d, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x65, 0x68, 0x6f,
	0x67, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x3b, 0x70, 0x72, 0x65, 0x68, 0x6f, 0x67, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x50, 0x72, 0x65, 0x68, 0x6f,
	0x67, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02, 0x0e, 0x50, 0x72, 0x65, 0x68,
	0x6f, 0x67, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2, 0x02, 0x1a, 0x50, 0x72, 0x65,
	0x68, 0x6f, 0x67, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x50, 0x72, 0x65, 0x68, 0x6f, 0x67,
	0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_prehog_v1alpha_teleport_proto_rawDescOnce sync.Once
	file_prehog_v1alpha_teleport_proto_rawDescData = file_prehog_v1alpha_teleport_proto_rawDesc
)

func file_prehog_v1alpha_teleport_proto_rawDescGZIP() []byte {
	file_prehog_v1alpha_teleport_proto_rawDescOnce.Do(func() {
		file_prehog_v1alpha_teleport_proto_rawDescData = protoimpl.X.CompressGZIP(file_prehog_v1alpha_teleport_proto_rawDescData)
	})
	return file_prehog_v1alpha_teleport_proto_rawDescData
}

var file_prehog_v1alpha_teleport_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_prehog_v1alpha_teleport_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_prehog_v1alpha_teleport_proto_goTypes = []interface{}{
	(DiscoverResource)(0),                            // 0: prehog.v1alpha.DiscoverResource
	(DiscoverStatus)(0),                              // 1: prehog.v1alpha.DiscoverStatus
	(*UserLoginEvent)(nil),                           // 2: prehog.v1alpha.UserLoginEvent
	(*SSOCreateEvent)(nil),                           // 3: prehog.v1alpha.SSOCreateEvent
	(*ResourceCreateEvent)(nil),                      // 4: prehog.v1alpha.ResourceCreateEvent
	(*SessionStartEvent)(nil),                        // 5: prehog.v1alpha.SessionStartEvent
	(*UIBannerClickEvent)(nil),                       // 6: prehog.v1alpha.UIBannerClickEvent
	(*UIOnboardCompleteGoToDashboardClickEvent)(nil), // 7: prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent
	(*UIOnboardAddFirstResourceClickEvent)(nil),      // 8: prehog.v1alpha.UIOnboardAddFirstResourceClickEvent
	(*UIOnboardAddFirstResourceLaterClickEvent)(nil), // 9: prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent
	(*UIOnboardSetCredentialSubmitEvent)(nil),        // 10: prehog.v1alpha.UIOnboardSetCredentialSubmitEvent
	(*UIOnboardRegisterChallengeSubmitEvent)(nil),    // 11: prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent
	(*UIRecoveryCodesContinueClickEvent)(nil),        // 12: prehog.v1alpha.UIRecoveryCodesContinueClickEvent
	(*UIRecoveryCodesCopyClickEvent)(nil),            // 13: prehog.v1alpha.UIRecoveryCodesCopyClickEvent
	(*UIRecoveryCodesPrintClickEvent)(nil),           // 14: prehog.v1alpha.UIRecoveryCodesPrintClickEvent
	(*DiscoverMetadata)(nil),                         // 15: prehog.v1alpha.DiscoverMetadata
	(*DiscoverResourceMetadata)(nil),                 // 16: prehog.v1alpha.DiscoverResourceMetadata
	(*DiscoverStepStatus)(nil),                       // 17: prehog.v1alpha.DiscoverStepStatus
	(*UIDiscoverStartedEvent)(nil),                   // 18: prehog.v1alpha.UIDiscoverStartedEvent
	(*UIDiscoverResourceSelectionEvent)(nil),         // 19: prehog.v1alpha.UIDiscoverResourceSelectionEvent
	(*SubmitEventRequest)(nil),                       // 20: prehog.v1alpha.SubmitEventRequest
	(*SubmitEventResponse)(nil),                      // 21: prehog.v1alpha.SubmitEventResponse
	(*HelloTeleportRequest)(nil),                     // 22: prehog.v1alpha.HelloTeleportRequest
	(*HelloTeleportResponse)(nil),                    // 23: prehog.v1alpha.HelloTeleportResponse
	(*timestamppb.Timestamp)(nil),                    // 24: google.protobuf.Timestamp
}
var file_prehog_v1alpha_teleport_proto_depIdxs = []int32{
	0,  // 0: prehog.v1alpha.DiscoverResourceMetadata.resource:type_name -> prehog.v1alpha.DiscoverResource
	1,  // 1: prehog.v1alpha.DiscoverStepStatus.status:type_name -> prehog.v1alpha.DiscoverStatus
	15, // 2: prehog.v1alpha.UIDiscoverStartedEvent.metadata:type_name -> prehog.v1alpha.DiscoverMetadata
	17, // 3: prehog.v1alpha.UIDiscoverStartedEvent.status:type_name -> prehog.v1alpha.DiscoverStepStatus
	15, // 4: prehog.v1alpha.UIDiscoverResourceSelectionEvent.metadata:type_name -> prehog.v1alpha.DiscoverMetadata
	16, // 5: prehog.v1alpha.UIDiscoverResourceSelectionEvent.resource:type_name -> prehog.v1alpha.DiscoverResourceMetadata
	17, // 6: prehog.v1alpha.UIDiscoverResourceSelectionEvent.status:type_name -> prehog.v1alpha.DiscoverStepStatus
	24, // 7: prehog.v1alpha.SubmitEventRequest.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 8: prehog.v1alpha.SubmitEventRequest.user_login:type_name -> prehog.v1alpha.UserLoginEvent
	3,  // 9: prehog.v1alpha.SubmitEventRequest.sso_create:type_name -> prehog.v1alpha.SSOCreateEvent
	4,  // 10: prehog.v1alpha.SubmitEventRequest.resource_create:type_name -> prehog.v1alpha.ResourceCreateEvent
	5,  // 11: prehog.v1alpha.SubmitEventRequest.session_start:type_name -> prehog.v1alpha.SessionStartEvent
	6,  // 12: prehog.v1alpha.SubmitEventRequest.ui_banner_click:type_name -> prehog.v1alpha.UIBannerClickEvent
	7,  // 13: prehog.v1alpha.SubmitEventRequest.ui_onboard_complete_go_to_dashboard_click:type_name -> prehog.v1alpha.UIOnboardCompleteGoToDashboardClickEvent
	8,  // 14: prehog.v1alpha.SubmitEventRequest.ui_onboard_add_first_resource_click:type_name -> prehog.v1alpha.UIOnboardAddFirstResourceClickEvent
	9,  // 15: prehog.v1alpha.SubmitEventRequest.ui_onboard_add_first_resource_later_click:type_name -> prehog.v1alpha.UIOnboardAddFirstResourceLaterClickEvent
	10, // 16: prehog.v1alpha.SubmitEventRequest.ui_onboard_set_credential_submit:type_name -> prehog.v1alpha.UIOnboardSetCredentialSubmitEvent
	11, // 17: prehog.v1alpha.SubmitEventRequest.ui_onboard_register_challenge_submit:type_name -> prehog.v1alpha.UIOnboardRegisterChallengeSubmitEvent
	12, // 18: prehog.v1alpha.SubmitEventRequest.ui_recovery_codes_continue_click:type_name -> prehog.v1alpha.UIRecoveryCodesContinueClickEvent
	13, // 19: prehog.v1alpha.SubmitEventRequest.ui_recovery_codes_copy_click:type_name -> prehog.v1alpha.UIRecoveryCodesCopyClickEvent
	14, // 20: prehog.v1alpha.SubmitEventRequest.ui_recovery_codes_print_click:type_name -> prehog.v1alpha.UIRecoveryCodesPrintClickEvent
	18, // 21: prehog.v1alpha.SubmitEventRequest.ui_discover_started_event:type_name -> prehog.v1alpha.UIDiscoverStartedEvent
	19, // 22: prehog.v1alpha.SubmitEventRequest.ui_discover_resource_selection_event:type_name -> prehog.v1alpha.UIDiscoverResourceSelectionEvent
	20, // 23: prehog.v1alpha.TeleportReportingService.SubmitEvent:input_type -> prehog.v1alpha.SubmitEventRequest
	22, // 24: prehog.v1alpha.TeleportReportingService.HelloTeleport:input_type -> prehog.v1alpha.HelloTeleportRequest
	21, // 25: prehog.v1alpha.TeleportReportingService.SubmitEvent:output_type -> prehog.v1alpha.SubmitEventResponse
	23, // 26: prehog.v1alpha.TeleportReportingService.HelloTeleport:output_type -> prehog.v1alpha.HelloTeleportResponse
	25, // [25:27] is the sub-list for method output_type
	23, // [23:25] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_prehog_v1alpha_teleport_proto_init() }
func file_prehog_v1alpha_teleport_proto_init() {
	if File_prehog_v1alpha_teleport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_prehog_v1alpha_teleport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSOCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceCreateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionStartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIBannerClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIOnboardCompleteGoToDashboardClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIOnboardAddFirstResourceClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIOnboardAddFirstResourceLaterClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIOnboardSetCredentialSubmitEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIOnboardRegisterChallengeSubmitEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIRecoveryCodesContinueClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIRecoveryCodesCopyClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIRecoveryCodesPrintClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverResourceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverStepStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIDiscoverStartedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UIDiscoverResourceSelectionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloTeleportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_prehog_v1alpha_teleport_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloTeleportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_prehog_v1alpha_teleport_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*SubmitEventRequest_UserLogin)(nil),
		(*SubmitEventRequest_SsoCreate)(nil),
		(*SubmitEventRequest_ResourceCreate)(nil),
		(*SubmitEventRequest_SessionStart)(nil),
		(*SubmitEventRequest_UiBannerClick)(nil),
		(*SubmitEventRequest_UiOnboardCompleteGoToDashboardClick)(nil),
		(*SubmitEventRequest_UiOnboardAddFirstResourceClick)(nil),
		(*SubmitEventRequest_UiOnboardAddFirstResourceLaterClick)(nil),
		(*SubmitEventRequest_UiOnboardSetCredentialSubmit)(nil),
		(*SubmitEventRequest_UiOnboardRegisterChallengeSubmit)(nil),
		(*SubmitEventRequest_UiRecoveryCodesContinueClick)(nil),
		(*SubmitEventRequest_UiRecoveryCodesCopyClick)(nil),
		(*SubmitEventRequest_UiRecoveryCodesPrintClick)(nil),
		(*SubmitEventRequest_UiDiscoverStartedEvent)(nil),
		(*SubmitEventRequest_UiDiscoverResourceSelectionEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_prehog_v1alpha_teleport_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prehog_v1alpha_teleport_proto_goTypes,
		DependencyIndexes: file_prehog_v1alpha_teleport_proto_depIdxs,
		EnumInfos:         file_prehog_v1alpha_teleport_proto_enumTypes,
		MessageInfos:      file_prehog_v1alpha_teleport_proto_msgTypes,
	}.Build()
	File_prehog_v1alpha_teleport_proto = out.File
	file_prehog_v1alpha_teleport_proto_rawDesc = nil
	file_prehog_v1alpha_teleport_proto_goTypes = nil
	file_prehog_v1alpha_teleport_proto_depIdxs = nil
}
